{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/game/confirm-move/confirm-move.component.ts","./src/app/game/confirm-move/confirm-move.component.html","./src/app/game/game.component.ts","./src/app/game/game.component.html","./src/app/game/not-valid/not-valid.component.ts","./src/app/game/not-valid/not-valid.component.html","./src/app/game/quit-game/quit-game.component.ts","./src/app/game/quit-game/quit-game.component.html","./src/app/lobby/against-pc/against-pc.component.ts","./src/app/lobby/against-pc/against-pc.component.html","./src/app/lobby/host-game/host-game.component.ts","./src/app/lobby/host-game/host-game.component.html","./src/app/lobby/join-game/join-game.component.ts","./src/app/lobby/join-game/join-game.component.html","./src/app/lobby/lobby.component.ts","./src/app/lobby/lobby.component.html","./src/app/lobby/waiting/waiting.component.ts","./src/app/lobby/waiting/waiting.component.html","./src/app/material.module.ts","./src/app/routing.module.ts","./src/app/shared/board/abstract.board.ts","./src/app/shared/board/cf-board.ts","./src/app/shared/board/ttt-board.ts","./src/app/shared/game-manager.service.ts","./src/app/shared/loading/loading.component.ts","./src/app/shared/loading/loading.component.html","./src/app/shared/manager.service.ts","./src/app/shared/player/abstract.player.ts","./src/app/shared/player/player.ts","./src/app/title-screen/title-screen.component.ts","./src/app/title-screen/title-screen.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'tic-tac-toe-connect-four';\n\n  constructor(private router : Router) {\n    // router.navigate(['/'])\n  }\n}\n","<router-outlet>\n    \n</router-outlet>","// modules\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RoutingModule } from \"./routing.module\";\nimport { MaterialModule } from \"./material.module\";\nimport { FormsModule } from '@angular/forms';\n//components\nimport { AppComponent } from './app.component';\nimport { TitleScreenComponent } from './title-screen/title-screen.component';\nimport { LobbyComponent } from \"./lobby/lobby.component\";\nimport { HostGameComponent } from \"./lobby/host-game/host-game.component\";\nimport { JoinGameComponent } from \"./lobby/join-game/join-game.component\";\nimport { QuitGameComponent } from \"./game/quit-game/quit-game.component\";\nimport { NotValidComponent } from \"./game/not-valid/not-valid.component\";\nimport { AgainstPcComponent } from \"./lobby/against-pc/against-pc.component\";\nimport { WaitingComponent } from \"./lobby/waiting/waiting.component\"\nimport { LoadingComponent } from \"./shared/loading/loading.component\";\nimport { ConfirmMoveComponent } from \"./game/confirm-move/confirm-move.component\";\nimport { GameComponent } from \"./game/game.component\";\n\n\ndeclare global {\n  export interface GameInfo {\n    hostName: string;\n    gameType: string;\n    gameName: string;\n    opponentPC: boolean;\n    opponentName?: string;\n    host?: boolean;\n    difficulty? : string;\n  }\n  export interface BoardPiece {\n    index: number[];\n    set : boolean;\n    piece: string;\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TitleScreenComponent,\n    LobbyComponent,\n    GameComponent,\n    HostGameComponent,\n    JoinGameComponent, \n    QuitGameComponent,\n    ConfirmMoveComponent,\n    AgainstPcComponent,\n    LoadingComponent,\n    WaitingComponent,\n    \n    NotValidComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    RoutingModule,\n    MaterialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    HostGameComponent, \n    JoinGameComponent, \n    QuitGameComponent, \n    AgainstPcComponent,\n    WaitingComponent,\n    NotValidComponent,\n    ConfirmMoveComponent\n  ]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { GameManagerService } from \"../../shared/game-manager.service\";\n\n@Component({\n  selector: 'app-confirm-move',\n  templateUrl: './confirm-move.component.html',\n  styleUrls: ['./confirm-move.component.css']\n})\nexport class ConfirmMoveComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public move : any[], private gameManager : GameManagerService) { }\n\n  ngOnInit(): void {\n  }\n\n  yes() {\n    this.gameManager.confirmMove(this.move[0],this.move[1]);\n  }\n\n}\n","<h4 mat-dialog-title>Confirm</h4>\n<main>\n\n    <section>\n        <p>Are you sure you about your move?</p>\n    </section>\n\n    <section id=\"buttons\">\n        <button mat-flat-button mat-dialog-close color=\"primary\" type=\"button\">No</button>\n        <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"yes()\">Yes</button>\n    </section>\n\n</main>","import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { GameManagerService } from '../shared/game-manager.service';\nimport { QuitGameComponent } from './quit-game/quit-game.component';\nimport { NotValidComponent } from './not-valid/not-valid.component';\nimport { ConfirmMoveComponent } from \"./confirm-move/confirm-move.component\";\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  private gameInfoSubscription : Subscription; \n  private canvasSubscription : Subscription;\n  private turnSubsription : Subscription;\n  private computerPieceSubscription : Subscription;\n\n  @ViewChild('canvas', {static: false})\n  private canvasElRef: ElementRef<HTMLCanvasElement>;\n  private canvas : HTMLCanvasElement;\n  private context : CanvasRenderingContext2D;\n  private dialogRef: MatDialogRef<QuitGameComponent | NotValidComponent | ConfirmMoveComponent>;\n  private playerPiece : string;\n  hostName : string = \"host\";\n  opponentName : string = \"opponent\";\n  turnBool : boolean = false;\n  clickedSpot : number[];\n\n\n  constructor(private gameManager: GameManagerService, private dialog: MatDialog, private router: Router) { \n    const gInfo = gameManager.getGameInfo();\n    this.hostName = gInfo.hostName;\n    this.opponentName = gInfo.opponentPC ? \"Computer\" : gInfo.opponentName;\n  }\n\n  ngOnInit(): void {\n    //subscriptions\n    this.gameInfoSubscription = this.gameManager.gameInfoSubject.subscribe(gameInfo => {\n      // this.hostName = gameInfo.hostName\n      // this.opponentName = gameInfo.opponentName;\n\n      if (!gameInfo) {\n        this.router.navigate(['/lobby'])\n      } \n      this.dialogRef.close();\n    })\n\n    this.turnSubsription = this.gameManager.playerTurnSubject.subscribe(turn => {\n      \n      this.clickedSpot = null;\n      \n      if (this.dialogRef) {\n        this.dialogRef.close();\n        this.dialogRef = null;\n      }\n\n      this.turnBool = turn ===  this.playerPiece ? true : false;\n    })\n  \n    this.computerPieceSubscription = this.gameManager.computerPieceSubject.subscribe(piece => {\n      this.playerPiece = piece;\n    })\n  }\n\n  ngOnDestroy() {\n    this.gameInfoSubscription.unsubscribe();\n    this.canvasSubscription.unsubscribe();\n    this.turnSubsription.unsubscribe();\n    this.computerPieceSubscription.unsubscribe();\n\n    this.clickedSpot = null;\n  }\n\n  ngAfterViewInit() {\n\n    this.canvas = this.canvasElRef.nativeElement;\n    this.canvas.width = window.innerWidth*0.7;\n    this.canvas.height = window.innerHeight*0.8;\n\n    this.gameManager.startGame(this.canvas);\n\n    //subscriptions\n    this.canvasSubscription = this.gameManager.board.canvasSubject.subscribe((canvas : HTMLCanvasElement) => {\n      this.canvas = canvas\n    })\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event){\n    this.gameManager.board.setCanvasDimensions(window.innerWidth*0.7, window.innerHeight*0.8)\n    this.gameManager.board.drawBoardAndPieces();\n  }\n\n  onCanvasClick(event : MouseEvent) {\n\n    //do nothing if it is not the player's turn\n    if (!this.turnBool) {\n      return\n    }\n\n    let rect = this.canvas.getBoundingClientRect()\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    \n    //get the board piece where user clicked\n    let boardPiece : BoardPiece = this.gameManager.board.clickBoard(x,y)\n\n    if (boardPiece.piece != \"\" && boardPiece.piece != this.playerPiece || boardPiece.set) {\n      this.dialog.open(NotValidComponent);\n      return\n    }\n\n\n    if (this.clickedSpot === boardPiece.index && boardPiece.piece === this.playerPiece) {\n      this.gameManager.removePiece(this.clickedSpot)\n      this.clickedSpot = null;\n    } else if (!this.clickedSpot){\n      this.clickedSpot = boardPiece.index\n      this.gameManager.notFinalMove(this.clickedSpot, this.playerPiece);\n    }\n\n    \n  }\n\n  onConfirmMove() {\n    this.dialogRef = this.dialog.open(ConfirmMoveComponent, {data: [this.clickedSpot,this.playerPiece]})\n    this.clickedSpot = null;\n  }\n\n  onQuitGame() {\n    this.dialogRef = this.dialog.open(QuitGameComponent)\n  }\n  \n\n}\n","\n<main>\n\n    <div id=\"banner\">\n        <h6 [ngClass]=\"{turn : turnBool === true}\">Host : {{hostName}}</h6>\n        <h6 [ngClass]=\"{turn : turnBool === false }\">Opponent : {{opponentName}} </h6>\n    </div>\n\n    <section id=\"canvasContainer\">\n        <canvas #canvas style=\"border: 5px inset indigo;\" (click)=\"onCanvasClick($event)\">\n\n        </canvas>\n    </section>\n\n\n    <section id=\"buttons\">\n        <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"onQuitGame()\">Quit Game</button>\n        <button mat-flat-button color=\"primary\" type=\"button\" [disabled]='!turnBool || !clickedSpot' (click)=\"onConfirmMove()\">Confirm Move</button>\n    </section>\n\n</main>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-valid',\n  templateUrl: './not-valid.component.html',\n  styleUrls: ['./not-valid.component.css']\n})\nexport class NotValidComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h4 mat-dialog-title>Error</h4>\n<main>\n\n    <section>\n        <p>Invalid move</p>\n    </section>\n\n    <section id=\"buttons\">\n        <button mat-flat-button mat-dialog-close color=\"primary\" type=\"button\">Okay</button>\n    </section>\n\n</main>","import { Component, OnInit } from '@angular/core';\nimport { GameManagerService } from \"../../shared/game-manager.service\";\n\n@Component({\n  selector: 'app-quit-game',\n  templateUrl: './quit-game.component.html',\n  styleUrls: ['./quit-game.component.css']\n})\nexport class QuitGameComponent implements OnInit {\n\n  constructor(private gameManager: GameManagerService) { }\n\n  ngOnInit(): void {\n  }\n\n  yes() {\n    this.gameManager.quitGame()\n  }\n\n}\n","<h4 mat-dialog-title>Confirm</h4>\n<main>\n\n    <section>\n        <p>Are you sure you want to quit?</p>\n    </section>\n\n    <section id=\"buttons\">\n        <button mat-flat-button mat-dialog-close color=\"primary\" type=\"button\">No</button>\n        <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"yes()\">Yes</button>\n    </section>\n\n</main>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { GameManagerService } from 'src/app/shared/game-manager.service';\n\n@Component({\n  selector: 'app-against-pc',\n  templateUrl: './against-pc.component.html',\n  styleUrls: ['./against-pc.component.css']\n})\nexport class AgainstPcComponent implements OnInit {\n\n  constructor(private gameManager : GameManagerService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(form : NgForm) {\n\n    const gInfo : GameInfo = {\n      gameName: \"name\",\n      gameType: form.value.gameType,\n      hostName: this.gameManager.playerName,\n      opponentPC: true,\n      difficulty: form.value.gameDiff\n    }\n\n    this.gameManager.againstPC(gInfo)\n  }\n\n}\n","<h4 mat-dialog-title>Against PC</h4>\n<form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\">\n\n    <mat-form-field>\n        <mat-label>Game Type</mat-label>\n        <mat-select required ngModel name=\"gameType\" apperance=\"fill\">\n            <mat-option value=\"TTT\">\n                Tic-Tac-Toe\n            </mat-option>\n            <mat-option value=\"CF\">\n                Connect 4\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n        <mat-label>Game Difficulty </mat-label>\n        <mat-select required ngModel name=\"gameDiff\" apperance=\"fill\">\n            <mat-option value=\"easy\">\n                Easy\n            </mat-option>\n            <mat-option value=\"med\">\n                Medium\n            </mat-option>\n            <mat-option value=\"hard\">\n                Hard\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <section>\n        <button mat-flat-button mat-dialog-close color=\"acccent\" type=\"button\">\n            Back\n        </button>\n        <button mat-flat-button [disabled]=\"f.invalid || f.pristine\" color=\"primary\">\n            Okay\n        </button>\n    </section>\n\n\n</form>","import { Component, Inject, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms'\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\n//services\nimport { GameManagerService } from \"../../shared/game-manager.service\";\n@Component({\n  selector: 'app-host-game',\n  templateUrl: './host-game.component.html',\n  styleUrls: ['./host-game.component.css']\n})\nexport class HostGameComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) private hostName : string, private router: Router, private gameManager: GameManagerService) { }\n\n  ngOnInit(): void {\n  }\n\n  onStart(form : NgForm) {\n\n    const gInfo : GameInfo = {\n      gameName: form.value.gameName,\n      gameType: form.value.gameType,\n      hostName: this.hostName,\n      host: true,\n      opponentPC: false\n    }\n    this.gameManager.hostGame(gInfo);\n\n  }\n\n}\n","\n<h4 mat-dialog-title>Host Game</h4>\n<form #f=\"ngForm\" (ngSubmit)=\"onStart(f)\">\n\n    <mat-form-field>\n        <input matNativeControl required ngModel name=\"gameName\" minlength=\"10\" placeholder=\"Game Name\" type=\"text\">\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Game Type</mat-label>\n        <mat-select required ngModel name=\"gameType\" apperance=\"fill\">\n            <mat-option value=\"TTT\">\n                Tic-Tac-Toe\n            </mat-option>\n            <mat-option value=\"CF\">\n                Connect 4\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <div>\n        <button mat-flat-button mat-dialog-close color=\"accent\" type=\"button\">Cancel</button>\n        <button mat-flat-button [disabled]=\"f.invalid || f.pristine\" color=\"primary\">Start</button>\n    </div>\n</form>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { GameManagerService } from 'src/app/shared/game-manager.service';\n@Component({\n  selector: 'app-join-game',\n  templateUrl: './join-game.component.html',\n  styleUrls: ['./join-game.component.css']\n})\nexport class JoinGameComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public gameInfo : GameInfo,\n    private gameManager: GameManagerService) { }\n\n  ngOnInit(): void {\n    console.log(this.gameInfo)\n  }\n\n\n  onJoin() {\n    this.gameManager.joinGame(this.gameInfo);\n  }\n}\n","<h4 mat-dialog-title> Join Game</h4>\n<main >\n\n    <section>\n        <p>{{gameInfo.hostName}}</p>\n        <p>{{gameInfo.gameType}}</p>\n        <p>{{gameInfo.gameName}}</p>\n    </section>\n\n\n    <div >\n        <button mat-flat-button mat-dialog-close color=\"accent\" type=\"button\" >Back</button>\n        <button mat-flat-button color=\"primary\" type=\"button\" (click)=\"onJoin()\" >Join</button>\n    </div>\n</main>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MatDialog, MatDialogRef, MatDialogState } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\n//components\nimport { HostGameComponent } from \"./host-game/host-game.component\";\nimport { JoinGameComponent } from \"./join-game/join-game.component\";\nimport { AgainstPcComponent } from \"./against-pc/against-pc.component\";\nimport { WaitingComponent } from \"./waiting/waiting.component\";\n//services\nimport { ManagerService } from \"../shared/manager.service\";\nimport { GameManagerService } from '../shared/game-manager.service';\n//rxjs\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-lobby',\n  templateUrl: './lobby.component.html',\n  styleUrls: ['./lobby.component.css']\n})\nexport class LobbyComponent implements OnInit, OnDestroy {\n\n  //subscriptions\n  gameInfoSubscription : Subscription;\n\n  \n  dataSource = new MatTableDataSource<GameInfo>();\n  displayedColumns = [\"gameName\" ,\"hostName\", \"gameType\"];\n  private dialogRef : MatDialogRef<HostGameComponent | JoinGameComponent | AgainstPcComponent | WaitingComponent>;\n\n  constructor(\n    private dialog : MatDialog, \n    private manager: ManagerService, \n    private gameManager: GameManagerService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.dataSource.data = [\n      {hostName: \"funkMaster100\", gameType: \"TicTacToe\", gameName: \"You cant beat\", opponentPC: false},\n      {hostName: \"connect4Mstr\", gameType: \"Connect4\", gameName: \"Casual\", opponentPC: false}\n    ];//dummy data\n\n    this.gameInfoSubscription = this.gameManager.gameInfoSubject.subscribe(gameInfo => {\n      //check close the dialog\n      if (this.dialogRef) {\n        this.dialogRef.close();\n        this.dialogRef = null;\n      }\n\n      if (gameInfo.opponentPC){\n        this.router.navigate(['/game']);\n      }\n\n      \n      if (gameInfo.host) {\n        this.dialogRef = this.dialog.open(WaitingComponent, {data :  \"Waiting for opponent.\"})\n\n        setTimeout(() => {\n          this.dialogRef.close()\n          this.dialogRef = null;\n          this.router.navigate(['/game'])\n        }, 4000);\n      } \n\n\n    })\n  }\n\n  ngOnDestroy() {\n    this.gameInfoSubscription.unsubscribe();\n  }\n\n  onHostGame() {\n    const hostName = this.gameManager.playerName;\n    this.dialogRef = this.dialog.open(HostGameComponent, {data : hostName});\n  }\n\n  onAgainstPC() {\n    this.dialogRef = this.dialog.open(AgainstPcComponent);\n  }\n\n  onClickRow(row : GameInfo) {\n    this.dialogRef = this.dialog.open(JoinGameComponent, {data: row});\n  }\n\n  getUserName() {\n    return this.gameManager.playerName;\n  }\n}\n","<main>\n    <h6 style=\"margin-left: 1rem\">Welcome {{getUserName()}} !</h6>\n\n    <section id=\"table\">\n        <mat-table [dataSource]=\"dataSource\">\n\n            <ng-container matColumnDef=\"gameName\">\n                <mat-header-cell *matHeaderCellDef>\n                    Game Name\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    {{element.gameName}}\n                </mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"gameType\">\n                <mat-header-cell *matHeaderCellDef>\n                    Game Type\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    {{element.gameType}}\n                </mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"hostName\">\n                <mat-header-cell *matHeaderCellDef>\n                    Player Name\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    {{element.hostName}}\n                </mat-cell>\n            </ng-container>\n\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"onClickRow(row)\">\n\n            </mat-row>\n        </mat-table>\n    </section>\n\n    <section id=\"form\">\n        <!-- form controls -->\n        <div>\n            <button mat-flat-button color=\"accent\" type=\"button\" routerLink=\"/\">Exit</button>\n            <button mat-flat-button color=\"secondary\" style=\"border: 1px grey inset;\" type=\"button\" (click)=\"onAgainstPC()\">Against PC</button>\n            <button mat-raised-button color=\"primary\" type=\"button\" (click)=\"onHostGame()\">Host Game</button>\n        </div>\n\n    </section>\n\n</main>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-waiting',\n  templateUrl: './waiting.component.html',\n  styleUrls: ['./waiting.component.css']\n})\nexport class WaitingComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public message : string ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  onBack() {\n    \n  }\n\n}\n","<h4 mat-dialog-title> Join Game</h4>\n<main >\n\n    <section>\n        <p>{{message}}</p>\n    </section>\n\n    <section id=\"spinner\">\n        <app-loading></app-loading>\n    </section>\n\n    <div >\n        <button mat-flat-button mat-dialog-close color=\"accent\" type=\"button\" (click)=\"onBack()\" >Back</button>\n    </div>\n</main>","import { NgModule } from '@angular/core';\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatSelectModule } from \"@angular/material/select\";\n\n@NgModule({\n  declarations: [],\n  imports: [\n    MatButtonModule,\n    MatInputModule,\n    MatTableModule,\n    MatDialogModule,\n    MatSelectModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatInputModule,\n    MatTableModule,\n    MatDialogModule,\n    MatSelectModule\n  ]\n})\nexport class MaterialModule { }\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { LobbyComponent } from './lobby/lobby.component';\nimport { TitleScreenComponent } from \"./title-screen/title-screen.component\";\nimport { GameComponent } from \"./game/game.component\";\n\nconst routes : Routes = [\n    {path: \"\", redirectTo: \"title\", pathMatch: 'full'},\n    {path: \"title\", component: TitleScreenComponent},\n    {path: \"lobby\", component: LobbyComponent},\n    {path: \"game\", component: GameComponent}\n\n];\n\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class RoutingModule {\n\n}","import { ThrowStmt } from '@angular/compiler';\nimport { Subject } from \"rxjs\";\n\nexport abstract class Board {\n\n    constructor(canvas : HTMLCanvasElement, numberOfRows: number, numberOfCols: number) {\n        this.canvas = canvas;\n        this.context = canvas.getContext('2d');\n        this.lengthOfCol = numberOfRows;\n        this.lengthOfRow = numberOfCols;\n\n        this.emptyBoard();\n        this.setCanvasDimensions(this.canvas.width,this.canvas.height);\n    }\n\n    public boardArray : Array<BoardPiece[]> //stroes the pieces\n\n    public canvas : HTMLCanvasElement;\n    public context : CanvasRenderingContext2D;\n    public canvasSubject = new Subject<HTMLCanvasElement>();\n    public lengthOfCol : number; //number of spots in a row or column\n    public lengthOfRow : number;\n    public emptySpots : number;\n    public unsetAndEmptySpots : number; \n\n    abstract checkForWinner();\n    abstract rowColToString(rc : BoardPiece[]);\n    abstract clickBoard(x:number,y:number):BoardPiece;\n    abstract getBoardPiece(r:number,c:number):BoardPiece;\n    abstract drawBoard();\n    abstract drawPieces();\n\n    clearBoard() {\n        this.context.clearRect(0,0,this.canvas.width, this.canvas.height);\n        this.canvasSubject.next(this.canvas);\n    }\n\n    placePiece(index: number[], playerPiece:string, isFinal : boolean) {\n        let boardPiece = this.boardArray[index[0]][index[1]];\n        boardPiece.piece = playerPiece;\n        \n        if (isFinal) {\n            this.unsetAndEmptySpots -= 1;\n            boardPiece.set = true;            \n        }\n\n        this.boardArray[index[0]][index[1]] = boardPiece;\n        this.emptySpots = this.emptySpots - 1 <= 0 ? 0 : this.emptySpots - 1;\n\n    }\n\n    removePiece(index: number[]) {\n        let bp : BoardPiece = this.boardArray[index[0]][index[1]];\n\n        if (!bp.set) {\n            console.log(\"piece is set. cannot be removed!\")\n            return\n        }\n        this.boardArray[index[0]][index[1]] = {set : false, piece : \"\", index : index}\n        this.emptySpots++;\n    }\n    \n    drawBoardAndPieces() {\n        this.clearBoard();\n        this.drawBoard();\n        this.drawPieces();\n        this.canvasSubject.next(this.canvas);\n    }\n\n\n    emptyBoard() {\n\n        this.emptySpots = this.lengthOfRow*this.lengthOfCol;\n        this.boardArray = new Array(this.lengthOfCol);\n\n        for (let i = 0; i < this.lengthOfCol; i++){\n            this.boardArray[i] = new Array<BoardPiece>(this.lengthOfRow)\n            for (let j = 0; j < this.lengthOfRow; j++) {\n                this.boardArray[i][j] = {piece: \"\", index: [i,j], set: false}\n            }\n        }\n    }\n\n    resetBoard() {\n        this.emptyBoard();\n        this.drawBoard();\n    }\n    \n    setCanvasDimensions(width=this.canvas.width, height=this.canvas.height) {\n        this.canvas.width = width;\n        this.canvas.height = height;\n    }\n}\n\n","import { Board } from \"./abstract.board\";\n\nexport class ConnectFourBoard extends Board{\n\n    constructor(canvas : HTMLCanvasElement) {\n        super(canvas, 7, 6);\n    }\n\n    checkForWinner() : string{\n        return \"\"\n    }\n    \n    getBoardPiece(r:number,c:number){\n        return {index: [], set: false, piece: \"\"}\n    }\n\n    drawBoard() {\n        \n    }\n\n    drawPieces() {\n\n    }\n    \n    clickBoard(x:number,y:number) {\n        return {index: [], set: false, piece: \"\"}\n    }\n\n    rowColToString(rc : BoardPiece[]) {\n        return \"\"\n    }\n}","import { throwMatDialogContentAlreadyAttachedError } from '@angular/material/dialog';\nimport { ɵangular_packages_platform_browser_dynamic_platform_browser_dynamic_a } from '@angular/platform-browser-dynamic';\nimport { Board } from \"./abstract.board\";\n\nexport class TicTacToeBoard extends Board{\n    \n    constructor(canvas : HTMLCanvasElement) {\n        super(canvas, 3, 3);\n        this.emptySpots = 9;\n        this.unsetAndEmptySpots = 9;\n        this.drawBoardAndPieces();\n        console.log(this.boardArray);\n    }\n\n    checkForWinner() : string {\n\n        let checkDiag1 = this.boardArray[0][0].piece === this.boardArray[1][1].piece && \n                         this.boardArray[1][1].piece === this.boardArray[2][2].piece;\n        let checkDiag2 = this.boardArray[2][0].piece === this.boardArray[1][1].piece &&\n                         this.boardArray[1][1].piece === this.boardArray[0][2].piece\n\n        if (checkDiag1){\n            return this.boardArray[0][0].piece\n        } else if (checkDiag2) {\n            return this.boardArray[2][0].piece\n        }\n        //check rows\n        for (let r = 0; r < 3; r++) {\n            let currentRow : BoardPiece[] = this.boardArray[r];\n            let str : string = this.rowColToString(currentRow)\n\n            if (str === \"xxx\") {\n                return \"x\"\n            } else if (str == \"ooo\") {\n                return \"o\"\n            }\n            \n        }\n\n        //check cols \n        let row0 : BoardPiece[] = this.boardArray[0];\n        let row1 : BoardPiece[] = this.boardArray[1];\n        let row2 : BoardPiece[] = this.boardArray[2];\n\n        for (let c = 0; c < 3; c++) {\n            let currentCol : BoardPiece[] = [row0[c],row1[c],row2[c]]\n            let str : string = this.rowColToString(currentCol);\n\n            if (str === \"xxx\") {\n                return \"x\"\n            } else if (str == \"ooo\") {\n                return \"o\"\n            }\n        }\n        return \"\"\n    }\n\n    drawBoard() {\n\n        console.log(this.canvas.width, this.canvas.height)\n        //draw columns\n        let i = this.canvas.width/this.lengthOfRow\n        while (i < this.canvas.width) {\n            this.context.beginPath() \n            this.context.moveTo(i,0);\n            this.context.lineTo(i,this.canvas.height);\n            i+=this.canvas.width/this.lengthOfRow;\n            this.context.stroke()\n        }\n\n        i = this.canvas.height/this.lengthOfCol\n\n        //draw rows\n        while (i < this.canvas.height) {\n            this.context.beginPath() \n            this.context.moveTo(0,i);\n            this.context.lineTo(this.canvas.width,i);\n            i+=this.canvas.height/this.lengthOfCol;\n            this.context.stroke()\n        }       \n\n\n    }\n\n    drawPieces() {\n\n        let i = 0;\n        let j = 0;\n        let widthOfOneSpot = this.canvas.width/this.lengthOfCol;\n        let heightOfOneSpot = this.canvas.height/this.lengthOfRow;\n        this.context.lineWidth = 5;\n        while (true) {\n            \n            let piece = this.boardArray[i][j];\n            this.context.beginPath()\n            if (piece.piece === \"x\") {\n\n                this.context.moveTo(widthOfOneSpot*(j+0.5),heightOfOneSpot*(i+0.5));\n                this.context.lineTo(widthOfOneSpot*(j+0.25),heightOfOneSpot*(i+0.25));\n                this.context.moveTo(widthOfOneSpot*(j+0.5),heightOfOneSpot*(i+0.5));\n                this.context.lineTo(widthOfOneSpot*(j+0.75),heightOfOneSpot*(i+0.25));\n                this.context.moveTo(widthOfOneSpot*(j+0.5),heightOfOneSpot*(i+0.5));\n                this.context.lineTo(widthOfOneSpot*(j+0.25),heightOfOneSpot*(i+0.75));\n                this.context.moveTo(widthOfOneSpot*(j+0.5),heightOfOneSpot*(i+0.5));\n                this.context.lineTo(widthOfOneSpot*(j+0.75),heightOfOneSpot*(i+0.75));\n\n            } else if (piece.piece === \"o\") {\n                this.context.ellipse(\n                    widthOfOneSpot*(j+0.5),\n                    heightOfOneSpot*(i+0.5),\n                    widthOfOneSpot*0.25,\n                    heightOfOneSpot*0.25,0,0,Math.PI*2);\n            }\n            this.context.stroke();\n            j++;\n\n            if (j > this.lengthOfCol - 1) {\n                j = 0;\n                i++;\n            }\n    \n\n            if (i > this.lengthOfRow - 1) {\n                break;\n            }\n            \n        }\n        this.context.lineWidth = 1;\n\n        \n\n    }\n\n    getBoardPiece( r:number, c:number) : BoardPiece {\n        return this.boardArray[r][c]\n    }\n\n    clickBoard(x:number, y:number) : BoardPiece{\n   \n        let i = 0;\n        let j = 0;\n        let widthOfOneSpot = this.canvas.width/this.lengthOfCol;\n        let heightOfOneSpot = this.canvas.height/this.lengthOfRow;\n        \n\n        //check if click is in cell boundaries\n        while (i < this.lengthOfCol && j < this.lengthOfRow) {\n            let checkCol = x > widthOfOneSpot*j && x < widthOfOneSpot*(j+1);\n            let checkRow = y > heightOfOneSpot*i && y < heightOfOneSpot*(i+1);\n\n            if (checkRow && checkCol) {\n                break;\n            }\n\n            j++;\n\n            if (j === this.lengthOfCol) {\n                j = 0;\n                i++;\n            }\n\n            if (i == this.lengthOfRow) {\n                break;\n            }\n\n\n        }\n        \n        let piece = this.getBoardPiece(i,j);\n        return piece;\n    }\n\n\n    rowColToString(rc : BoardPiece[]) {\n       return rc.map((rc : BoardPiece) => {\n            return rc.piece;\n        }).join(\"\")\n    }\n\n\n}","import { Injectable } from '@angular/core';\nimport { Subject } from \"rxjs\";\nimport { TicTacToeBoard } from \"./board/ttt-board\";\nimport { ConnectFourBoard} from \"./board/cf-board\";\nimport { ComputerPlayer } from \"./player/player\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameManagerService {\n  private gameInfo : GameInfo;\n  private computerPiece : string ;\n\n  gameInfoSubject = new Subject<GameInfo>();\n  playerTurnSubject = new Subject<string>();\n  computerPieceSubject = new Subject<string>();\n\n  board : TicTacToeBoard | ConnectFourBoard = null;\n  pc : ComputerPlayer;\n\n  playerName : string ;\n  turn : string;\n  \n\n  constructor() { }\n\n  hostGame(gameInfo : GameInfo) {\n    this.setGameInfo(gameInfo)\n  }\n\n  againstPC(gameInfo : GameInfo){\n    this.setGameInfo(gameInfo)\n  }\n\n  joinGame(gameInfo : GameInfo) {\n    this.setGameInfo(gameInfo)\n  }\n\n  quitGame() {\n    \n    this.clearGameInfo();\n    this.board.clearBoard();\n    this.board.emptyBoard();\n    delete this.board;\n    delete this.pc;\n    this.turn = \"\";\n  }\n\n  startGame(canvas : HTMLCanvasElement) {\n\n    const ginfo = this.gameInfo;\n\n    this.computerPiece = Math.floor(Math.random()*2) === 0 ? \"o\" : \"x\";\n    \n    if (ginfo.opponentPC) {\n      this.pc = new ComputerPlayer(this.computerPiece,false,ginfo.difficulty,this);\n      this.computerPieceSubject.next(this.computerPiece === \"x\" ? \"o\" : \"x\");\n    }\n\n    if (ginfo.gameType === \"TTT\") {\n      this.board = new TicTacToeBoard(canvas);\n    } else if (ginfo.gameType === \"CF\") {\n      this.board = new ConnectFourBoard(canvas);\n    }\n    \n    this.turn = Math.floor(Math.random()*2) === 0 ? \"o\" : \"x\"\n    this.playerTurnSubject.next(this.turn);\n  }\n\n  confirmMove(move : number[], piece: string) {\n    this.board.placePiece(move,piece,true);\n    this.board.drawBoardAndPieces();\n    this.nextTurn();\n  }\n\n  notFinalMove(move : number[], piece: string) {\n    this.board.placePiece(move,piece,false)\n    this.board.drawBoardAndPieces();\n  }\n\n  removePiece(move: number[]) {\n    this.board.removePiece(move);\n    this.board.drawBoardAndPieces();\n  }\n\n  nextTurn() {\n    this.turn = this.turn === \"x\" ? \"o\" : \"x\";\n    this.playerTurnSubject.next(this.turn);\n  }\n\n  setGameInfo(gameInfo : GameInfo) {\n    this.gameInfo = gameInfo;\n    this.gameInfoSubject.next(gameInfo);\n  }\n\n  getGameInfo() {\n    return this.gameInfo;\n  }\n\n  clearGameInfo() {\n    this.gameInfo = null;\n    this.gameInfoSubject.next(this.gameInfo);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.css']\n})\nexport class LoadingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"loadingio-spinner-blocks-3112n02kcmk\">\n    <div class=\"ldio-3flzva71sn7\">\n        <div style='left:38px;top:38px;animation-delay:0s'></div>\n        <div style='left:80px;top:38px;animation-delay:0.125s'></div>\n        <div style='left:122px;top:38px;animation-delay:0.25s'></div>\n        <div style='left:38px;top:80px;animation-delay:0.875s'></div>\n        <div style='left:122px;top:80px;animation-delay:0.375s'></div>\n        <div style='left:38px;top:122px;animation-delay:0.75s'></div>\n        <div style='left:80px;top:122px;animation-delay:0.625s'></div>\n        <div style='left:122px;top:122px;animation-delay:0.5s'></div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ManagerService {\n\n  constructor() { }\n}\n","import { TicTacToeBoard } from \"../board/ttt-board\";\nimport { GameManagerService } from \"../game-manager.service\";\nimport { Subscription } from \"rxjs\";\n\nexport abstract class Player {\n\n    boardArray = [];\n    playerTurnSubscription : Subscription\n\n    constructor(protected piece : string, protected isHuman : boolean, protected mode : string = \"easy\", protected gameManager : GameManagerService=null) {\n        this.mode = mode;\n    }\n    \n    getIsHuman() {\n        return this.isHuman;\n    }\n\n    getPiece() {\n        return this.piece;\n    }\n\n    abstract playEasy();\n    abstract playMedium();\n    abstract playHard();\n\n\n}","import { Player } from \"./abstract.player\";\nimport { GameManagerService } from \"../game-manager.service\";\nimport { TicTacToeBoard } from '../board/ttt-board';\nimport { verifyHostBindings } from '@angular/compiler';\n\nexport class ComputerPlayer extends Player {\n\n    constructor(piece : string, isHuman=false, mode : string = \"easy\", gm: GameManagerService =null){\n        super(piece,isHuman,mode,gm)\n        \n        this.playerTurnSubscription = this.gameManager.playerTurnSubject.subscribe(turn => {\n            if (turn === this.piece) {\n                let result = this.play()\n                this.decideOnMove(result)\n            }\n        })\n    }\n\n\n    decideOnMove(choice: number[]) {\n        this.gameManager.confirmMove(choice,this.piece)\n    }\n\n    play () : number[] {\n        \n        if (this.mode === \"easy\") {\n            return this.playEasy()\n        } else if (this.mode === \"medium\") {\n            return this.playMedium()\n        } else {\n            return this.playHard()\n        }\n    \n        \n\n    }\n \n    playEasy () {\n        let r = Math.floor(Math.random()*3);\n        let c = Math.floor(Math.random()*3);\n        let piece = this.gameManager.board.getBoardPiece(r,c)\n        while (piece.piece != \"\") {\n            piece = this.gameManager.board.getBoardPiece(r,c);\n        }\n        return [r,c]\n    }\n\n    playMedium() {\n        const decision = Math.floor(Math.random()*100)\n\n        if (decision >= 60) {\n            return this.playEasy();\n        } else {\n           return this.playMiniMax();\n        }\n    }\n    \n    playHard() {\n        const decision = Math.floor(Math.random()*100)\n\n        if (decision >= 80) {\n            return this.playEasy();\n        } else {\n            return this.playMiniMax();\n        }\n    }\n\n    private playMiniMax() {\n        return this.findBestMove();\n    }\n\n    private findBestMove() {\n        let board = this.gameManager.board;\n        let bestVal: number = this.piece === \"x\" ? -1000 : 1000;\n        let bestMove : number[] = [-1,-1];\n\n        for (let r = 0 ; r < 3; r++) {\n            for (let c = 0; c < 3; c++) {\n                if (board.getBoardPiece(r,c).piece === \"\") {\n                    board.placePiece([r,c], this.piece, false)\n                    let isMaximizer = this.piece === \"x\" ? true : false;\n                    let moveVal = this.miniMax(board,0,!isMaximizer);\n                    board.removePiece([r,c]);\n                    let check = this.piece === \"x\" ? moveVal > bestVal : moveVal < bestVal;\n                    if (check) {\n                        bestMove = [r,c]\n                        bestVal = moveVal\n                    }\n                }\n            }\n        }\n        return bestMove;\n    }\n\n    private miniMax(board: TicTacToeBoard, depth: number, isMax: boolean) : number {\n        const winner = board.checkForWinner();\n        \n        if (winner === \"x\") {\n            return 10 - depth;\n        } else if (winner === \"o\") {\n            return -10 + depth;\n        } \n\n        const movesLeft = board.emptySpots;\n\n        if (movesLeft <= 0) {\n            return 0;\n        }\n\n        if (isMax) {\n            let bestVal = -10000\n            for (let r = 0; r < 3; r++) {\n                for (let c = 0; c < 3; c++) {\n                    if (board.getBoardPiece(r,c).piece === \"\") {\n                        board.placePiece([r,c], \"x\", false)\n                        let value = this.miniMax(board, depth+1, !isMax)\n                        value = !!value ? value : 0;\n                        bestVal = Math.max(bestVal, value)\n                        board.removePiece([r,c])\n                    }\n\n                }\n            }\n            return bestVal\n\n        } else {\n            let bestVal = 10000\n            for (let r = 0; r < 3; r++) {\n                for (let c = 0; c < 3; c++) {\n                    if (board.getBoardPiece(r,c).piece === \"\") {\n                        board.placePiece([r,c], \"o\", false)\n                        let value = this.miniMax(board, depth+1, !isMax)\n                        value = !!value ? value : 0;\n                        bestVal = Math.min(bestVal, value)\n                        board.removePiece([r,c])\n                    }\n\n                }\n            }\n            return bestVal;\n        }\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from \"@angular/forms\";\nimport { Router } from '@angular/router';\nimport { GameManagerService } from '../shared/game-manager.service';\n\n@Component({\n  selector: 'app-title-screen',\n  templateUrl: './title-screen.component.html',\n  styleUrls: ['./title-screen.component.css']\n})\nexport class TitleScreenComponent implements OnInit {\n\n  constructor(private router: Router, private gameManager: GameManagerService) { }\n\n  ngOnInit(): void {\n  }\n\n  onOkay(form : NgForm) {\n    this.gameManager.playerName = form.value.username;\n    this.router.navigate(['/lobby'])\n  }\n\n}\n","<main>\n    <section id=\"title\">\n        <h1>Tic Tac Toe & Connect 4</h1>\n    </section>\n    <section id=\"form\">\n        <form #f=\"ngForm\" (ngSubmit)=\"onOkay(f)\" >\n            <mat-form-field>\n                <input matNativeControl ngModel name=\"username\" required placeholder=\"Enter Username\">\n            </mat-form-field>\n            <mat-error></mat-error>\n            <button mat-raised-button [disabled]=\"f.invalid || f.pristine\" color=\"primary\">Okay</button>\n        </form>\n    </section>\n</main>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import \"hammerjs\";\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport { RequiredValidator } from '@angular/forms';\n\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n\n"],"sourceRoot":"webpack:///"}