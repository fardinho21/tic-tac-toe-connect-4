{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/game/confirm-move/confirm-move.component.ts","./src/app/game/confirm-move/confirm-move.component.html","./src/app/game/game-end/game-end.component.ts","./src/app/game/game-end/game-end.component.html","./src/app/game/game.component.ts","./src/app/game/game.component.html","./src/app/game/not-valid/not-valid.component.ts","./src/app/game/not-valid/not-valid.component.html","./src/app/game/quit-game/quit-game.component.ts","./src/app/game/quit-game/quit-game.component.html","./src/app/lobby/against-pc/against-pc.component.ts","./src/app/lobby/against-pc/against-pc.component.html","./src/app/lobby/host-game/host-game.component.ts","./src/app/lobby/host-game/host-game.component.html","./src/app/lobby/join-game/join-game.component.ts","./src/app/lobby/join-game/join-game.component.html","./src/app/lobby/lobby.component.ts","./src/app/lobby/lobby.component.html","./src/app/lobby/waiting/waiting.component.ts","./src/app/lobby/waiting/waiting.component.html","./src/app/material.module.ts","./src/app/routing.module.ts","./src/app/shared/backend.service.ts","./src/app/shared/board/abstract.board.ts","./src/app/shared/board/cf-board.ts","./src/app/shared/board/ttt-board.ts","./src/app/shared/game-manager.service.ts","./src/app/shared/loading/loading.component.ts","./src/app/shared/loading/loading.component.html","./src/app/shared/manager.service.ts","./src/app/shared/player/abstract.player.ts","./src/app/shared/player/player.ts","./src/app/title-screen/title-screen.component.ts","./src/app/title-screen/title-screen.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'tic-tac-toe-connect-four';\n\n  constructor(private router : Router) {\n    // router.navigate(['/'])\n  }\n}\n","<router-outlet>\n    \n</router-outlet>","// modules\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RoutingModule } from \"./routing.module\";\nimport { MaterialModule } from \"./material.module\";\nimport { FormsModule } from '@angular/forms';\n//components\nimport { AppComponent } from './app.component';\nimport { TitleScreenComponent } from './title-screen/title-screen.component';\nimport { LobbyComponent } from \"./lobby/lobby.component\";\nimport { HostGameComponent } from \"./lobby/host-game/host-game.component\";\nimport { JoinGameComponent } from \"./lobby/join-game/join-game.component\";\nimport { QuitGameComponent } from \"./game/quit-game/quit-game.component\";\nimport { NotValidComponent } from \"./game/not-valid/not-valid.component\";\nimport { AgainstPcComponent } from \"./lobby/against-pc/against-pc.component\";\nimport { WaitingComponent } from \"./lobby/waiting/waiting.component\"\nimport { LoadingComponent } from \"./shared/loading/loading.component\";\nimport { ConfirmMoveComponent } from \"./game/confirm-move/confirm-move.component\";\nimport { GameComponent } from \"./game/game.component\";\nimport { GameEndComponent } from './game/game-end/game-end.component';\n\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { GameManagerService } from './shared/game-manager.service';\n\ndeclare global {\n  export interface GameInfo {\n    hostName: string;\n    gameType: string;\n    gameName: string;\n    opponentPC: boolean;\n    inSession?: boolean;\n    userId?: string;\n    playersReady?: boolean;\n    opponentName?: string;\n    host?: boolean;\n    difficulty? : string;\n\n  }\n  export interface BoardPiece {\n    index: number[];\n    set : boolean;\n    piece: string;\n  }\n\n  export interface BackendResponse {\n    message: string,\n    status: number,\n    username?: string,\n    client?: string,\n    userId?: string,\n    token?: any,\n    error?:  string,\n    extra?: any,\n    gameList?: any,\n    gameState: any\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TitleScreenComponent,\n    LobbyComponent,\n    GameComponent,\n    HostGameComponent,\n    JoinGameComponent, \n    QuitGameComponent,\n    ConfirmMoveComponent,\n    AgainstPcComponent,\n    LoadingComponent,\n    WaitingComponent,\n    GameEndComponent,\n    NotValidComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    RoutingModule,\n    MaterialModule,\n    HttpClientModule\n  ],\n  providers: [GameManagerService],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    HostGameComponent, \n    JoinGameComponent, \n    QuitGameComponent, \n    AgainstPcComponent,\n    WaitingComponent,\n    NotValidComponent,\n    ConfirmMoveComponent,\n    GameEndComponent\n  ]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { GameManagerService } from \"../../shared/game-manager.service\";\n\n@Component({\n  selector: 'app-confirm-move',\n  templateUrl: './confirm-move.component.html',\n  styleUrls: ['./confirm-move.component.css']\n})\nexport class ConfirmMoveComponent implements OnInit {\n\n  confirmMoveClicked = false;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public move : any[], private gameManager : GameManagerService) { }\n\n\n  ngOnInit(): void {\n    this.confirmMoveClicked = false;\n  }\n\n  yes() {\n    this.confirmMoveClicked = true;\n    this.gameManager.confirmMove(this.move[0],this.move[1]);\n  }\n\n  no() {\n    \n  }\n\n}\n","<h4 mat-dialog-title>Confirm</h4>\n<main>\n\n    <section>\n        <p>Are you sure you about your move?</p>\n    </section>\n\n    <section id=\"buttons\">\n        <button mat-flat-button mat-dialog-close color=\"primary\" [disabled]=\"confirmMoveClicked\" type=\"button\" (click)=\"no()\">No</button>\n        <button mat-flat-button color=\"accent\" [disabled]=\"confirmMoveClicked\" type=\"button\" (click)=\"yes()\">Yes</button>\n    </section>\n\n</main>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-game-end',\n  templateUrl: './game-end.component.html',\n  styleUrls: ['./game-end.component.css']\n})\nexport class GameEndComponent implements OnInit {\n\n  message : string;\n  header : string;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data : {result: string; piece:string}) { }\n\n  ngOnInit(): void {\n    if (this.data.result === \"draw\") {\n      this.message = \"The game is tied!\"\n      this.header = \"Tie\"\n    } else if (this.data.piece === this.data.result) {\n      this.message = \"You win!\"\n      this.header = \"Chicken Dinner\"\n    } else if (this.data.result != \"draw\" && this.data.result != this.data.piece){\n      this.message = \"You lose!\"\n      this.header = \"Too Bad\"\n    }\n  }\n\n}\n","<h4 mat-dialog-title>{{header}}</h4>\n<main>\n\n    <section>\n        <p>{{message}}</p>\n    </section>\n\n    <section id=\"buttons\">\n        <button mat-flat-button mat-dialog-close color=\"accent\" type=\"button\">Okay</button>\n    </section>\n\n</main>","import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { GameManagerService } from '../shared/game-manager.service';\nimport { QuitGameComponent } from './quit-game/quit-game.component';\nimport { NotValidComponent } from './not-valid/not-valid.component';\nimport { ConfirmMoveComponent } from \"./confirm-move/confirm-move.component\";\nimport { GameEndComponent } from \"./game-end/game-end.component\";\nimport { BackendService } from '../shared/backend.service';\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  private gameInfoSubscription : Subscription; \n  private canvasSubscription : Subscription;\n  private turnSubsription : Subscription;\n  private computerPieceSubscription : Subscription;\n  private backendSubscription : Subscription;\n  gameEndSubscription : Subscription;\n\n  @ViewChild('canvas', {static: false})\n  private canvasElRef: ElementRef<HTMLCanvasElement>;\n  private canvas : HTMLCanvasElement;\n  private context : CanvasRenderingContext2D;\n  private dialogRef: MatDialogRef<any>;\n  private playerPiece : string;\n  hostName : string = \"host\";\n  opponentName : string = \"opponent\";\n  turnBool : boolean = false;\n  clickedSpot : number[];\n  gameEnd : boolean = false;\n  gInfo : GameInfo;\n  \n  dbQueryInterval : number;\n\n  constructor(private gameManager: GameManagerService, private backendManager : BackendService, private dialog: MatDialog, private router: Router) { \n    this.gInfo = gameManager.getGameInfo();\n    this.hostName = this.gInfo.hostName;\n    this.opponentName = this.gInfo.opponentPC ? \"Computer\" : this.gInfo.opponentName;\n  }\n\n  ngOnInit(): void {\n    //subscriptions\n    this.gameInfoSubscription = this.gameManager.gameInfoSubject.subscribe(gameInfo => {\n\n      if (!gameInfo) {\n        \n        this.closeDialog();\n        this.turnBool = false;\n        this.playerPiece = null;\n        this.clickedSpot = null;\n        this.router.navigate(['/lobby'])\n      } \n\n    })\n\n    this.turnSubsription = this.gameManager.playerTurnSubject.subscribe(turn => {\n      \n      this.clickedSpot = null;\n      \n      this.closeDialog();\n\n      this.turnBool = turn ===  this.playerPiece ? true : false;\n    })\n  \n    if (this.opponentName == \"Computer\" ) {\n      this.computerPieceSubscription = this.gameManager.computerPieceSubject.subscribe(piece => {\n        this.playerPiece = piece;\n      })\n\n    }\n\n    this.gameEndSubscription = this.gameManager.gameEndSubject.subscribe(check => {\n\n      this.closeDialog();\n\n      this.gameEnd = true;\n      this.onGameEnd(check)\n    })\n\n    if (this.opponentName != \"Computer\" || !this.gInfo.opponentPC) {\n\n      this.backendSubscription = this.backendManager.backendSubject.subscribe(response => {\n        if (response.extra === \"gameStarted\") {\n\n          console.log(response.gameState)\n\n          \n        } \n      })\n\n    }\n  }\n\n  ngOnDestroy() {\n    this.gameInfoSubscription.unsubscribe();\n    this.canvasSubscription.unsubscribe();\n    this.turnSubsription.unsubscribe();\n    this.computerPieceSubscription.unsubscribe();\n    this.gameEndSubscription.unsubscribe();\n    this.closeDialog();\n    this.clickedSpot = null;\n    this.gameManager = null;\n    \n  }\n\n  ngAfterViewInit() {\n\n    this.canvas = this.canvasElRef.nativeElement;\n    this.canvas.width = window.innerWidth*0.7;\n    this.canvas.height = window.innerHeight*0.8;\n\n    this.gameManager.startGame(this.canvas);\n    this.backendManager.startGame(this.gInfo, this.gameManager.board);\n\n    //subscriptions\n    this.canvasSubscription = this.gameManager.board.canvasSubject.subscribe((canvas : HTMLCanvasElement) => {\n      this.canvas = canvas\n    })\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event){\n    this.gameManager.board.setCanvasDimensions(window.innerWidth*0.7, window.innerHeight*0.8)\n    this.gameManager.board.drawBoardAndPieces();\n  }\n\n  onCanvasClick(event : MouseEvent) {\n\n    //do nothing if it is not the player's turn\n    if (!this.turnBool) {\n      return\n    } else if (this.gameEnd) {\n      return\n    }\n\n    let rect = this.canvas.getBoundingClientRect()\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    \n    //get the board piece where user clicked\n    let boardPiece : BoardPiece = this.gameManager.board.clickBoard(x,y)\n\n    if (boardPiece.piece != \"\" && boardPiece.piece != this.playerPiece || boardPiece.set) {\n      this.dialog.open(NotValidComponent);\n      return\n    }\n\n\n    if (this.clickedSpot === boardPiece.index && boardPiece.piece === this.playerPiece) {\n      this.gameManager.removePiece(this.clickedSpot)\n      this.clickedSpot = null;\n    } else if (!this.clickedSpot){\n      this.clickedSpot = boardPiece.index\n      this.gameManager.notFinalMove(this.clickedSpot, this.playerPiece);\n    }\n\n    \n  }\n\n  onConfirmMove() {\n    this.dialogRef = this.dialog.open(ConfirmMoveComponent, {data: [this.clickedSpot,this.playerPiece]})\n  }\n\n  onQuitGame() {\n    this.dialogRef = this.dialog.open(QuitGameComponent)\n  }\n  \n  onGameEnd(result : string ) {\n    this.dialogRef = this.dialog.open(GameEndComponent, {data: {result: result, piece: this.playerPiece}} )\n  }\n\n  closeDialog() {\n    if (this.dialogRef) {\n      this.dialogRef.close()\n    }\n    this.dialogRef=null;\n  }\n\n  startDBQueryInterval() {\n    this.dbQueryInterval = setInterval(() => {\n      this.backendManager.checkGameState();\n    }, 1000);\n  }\n}\n","\n<main>\n\n    <div id=\"banner\">\n        <h6 [ngClass]=\"{turn : turnBool === true}\">Host : {{hostName}}</h6>\n        <h6 [ngClass]=\"{turn : turnBool === false }\">Opponent : {{opponentName}} </h6>\n    </div>\n\n    <section id=\"canvasContainer\">\n        <canvas #canvas style=\"border: 5px inset indigo;\" (click)=\"onCanvasClick($event)\">\n\n        </canvas>\n    </section>\n\n\n    <section id=\"buttons\">\n        <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"onQuitGame()\">Quit Game</button>\n        <button mat-flat-button color=\"primary\" type=\"button\" [disabled]='!turnBool || !clickedSpot || gameEnd' (click)=\"onConfirmMove()\">Confirm Move</button>\n    </section>\n\n</main>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-valid',\n  templateUrl: './not-valid.component.html',\n  styleUrls: ['./not-valid.component.css']\n})\nexport class NotValidComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h4 mat-dialog-title>Error</h4>\n<main>\n\n    <section>\n        <p>Invalid move</p>\n    </section>\n\n    <section id=\"buttons\">\n        <button mat-flat-button mat-dialog-close color=\"primary\" type=\"button\">Okay</button>\n    </section>\n\n</main>","import { Component, OnInit } from '@angular/core';\nimport { GameManagerService } from \"../../shared/game-manager.service\";\n\n@Component({\n  selector: 'app-quit-game',\n  templateUrl: './quit-game.component.html',\n  styleUrls: ['./quit-game.component.css']\n})\nexport class QuitGameComponent implements OnInit {\n\n  constructor(private gameManager: GameManagerService) { }\n\n  ngOnInit(): void {\n  }\n\n  yes() {\n    this.gameManager.quitGame()\n  }\n\n}\n","<h4 mat-dialog-title>Confirm</h4>\n<main>\n\n    <section>\n        <p>Are you sure you want to quit?</p>\n    </section>\n\n    <section id=\"buttons\">\n        <button mat-flat-button mat-dialog-close color=\"primary\" type=\"button\">No</button>\n        <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"yes()\">Yes</button>\n    </section>\n\n</main>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { GameManagerService } from 'src/app/shared/game-manager.service';\n\n@Component({\n  selector: 'app-against-pc',\n  templateUrl: './against-pc.component.html',\n  styleUrls: ['./against-pc.component.css']\n})\nexport class AgainstPcComponent implements OnInit {\n\n  constructor(private gameManager : GameManagerService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(form : NgForm) {\n\n    const gInfo : GameInfo = {\n      gameName: \"name\",\n      gameType: form.value.gameType,\n      hostName: this.gameManager.playerName,\n      opponentPC: true,\n      difficulty: form.value.gameDiff\n    }\n\n    this.gameManager.againstPC(gInfo)\n  }\n\n}\n","<h4 mat-dialog-title>Against PC</h4>\n<form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\">\n\n    <mat-form-field>\n        <mat-label>Game Type</mat-label>\n        <mat-select required ngModel name=\"gameType\" apperance=\"fill\">\n            <mat-option value=\"TTT\">\n                Tic-Tac-Toe\n            </mat-option>\n            <mat-option value=\"CF\">\n                Connect 4\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n        <mat-label>Game Difficulty </mat-label>\n        <mat-select required ngModel name=\"gameDiff\" apperance=\"fill\">\n            <mat-option value=\"easy\">\n                Easy\n            </mat-option>\n            <mat-option value=\"med\">\n                Medium\n            </mat-option>\n            <mat-option value=\"hard\">\n                Hard\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <section>\n        <button mat-flat-button mat-dialog-close color=\"acccent\" type=\"button\">\n            Back\n        </button>\n        <button mat-flat-button [disabled]=\"f.invalid || f.pristine\" color=\"primary\">\n            Okay\n        </button>\n    </section>\n\n\n</form>","import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from \"rxjs\";\nimport { NgForm } from '@angular/forms'\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\n//services\nimport { GameManagerService } from \"../../shared/game-manager.service\";\nimport { BackendService } from \"../../shared/backend.service\";\n@Component({\n  selector: 'app-host-game',\n  templateUrl: './host-game.component.html',\n  styleUrls: ['./host-game.component.css']\n})\nexport class HostGameComponent implements OnInit, OnDestroy {\n\n  backendSubscription : Subscription;\n  gInfo : GameInfo;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) private hostName : string, \n    private router: Router,\n    private backendManager: BackendService,\n    private gameManager: GameManagerService) { }\n\n  ngOnInit(): void {\n    this.backendSubscription = this.backendManager.backendSubject.subscribe(response => {\n      if (response.extra != \"gameHosted\") {\n        console.log(\"error occured\")\n      } else if (response.extra === \"gameHosted\") {\n        this.gameManager.hostGame(this.gInfo);\n      }\n    })\n  }\n\n  ngOnDestroy() {\n    this.backendSubscription.unsubscribe();\n  }\n\n\n  onHost(form : NgForm) {\n\n    this.gInfo = {\n      gameName: form.value.gameName,\n      gameType: form.value.gameType,\n      userId: this.backendManager.userId,\n      hostName: this.hostName,\n      playersReady: false,\n      host: true,\n      opponentPC: false\n    }\n\n   this.backendManager.hostGame(this.gInfo)\n\n  }\n\n}\n","\n<h4 mat-dialog-title>Host Game</h4>\n<form #f=\"ngForm\" (ngSubmit)=\"onHost(f)\">\n\n    <mat-form-field>\n        <input matNativeControl required ngModel name=\"gameName\" minlength=\"10\" placeholder=\"Game Name\" type=\"text\">\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Game Type</mat-label>\n        <mat-select required ngModel name=\"gameType\" apperance=\"fill\">\n            <mat-option value=\"TTT\">\n                Tic-Tac-Toe\n            </mat-option>\n            <mat-option value=\"CF\">\n                Connect 4\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <div>\n        <button mat-flat-button mat-dialog-close color=\"accent\" type=\"button\">Cancel</button>\n        <button mat-flat-button [disabled]=\"f.invalid || f.pristine\" color=\"primary\" >Host</button>\n    </div>\n</form>","import { Component, Inject, OnInit, OnDestroy } from '@angular/core';\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { Subscription } from 'rxjs';\nimport { BackendService } from 'src/app/shared/backend.service';\nimport { GameManagerService } from 'src/app/shared/game-manager.service';\n@Component({\n  selector: 'app-join-game',\n  templateUrl: './join-game.component.html',\n  styleUrls: ['./join-game.component.css']\n})\nexport class JoinGameComponent implements OnInit, OnDestroy {\n\n  backendSubscription : Subscription;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public gameInfo : GameInfo,\n    private gameManager: GameManagerService,\n    private backendManager: BackendService) { }\n\n  ngOnInit(): void {\n    console.log(this.gameInfo)\n    this.backendSubscription = this.backendManager.getBackEndSubject().subscribe((brResponse : BackendResponse)=> {\n      if (brResponse.extra === \"gameFound:Waiting\") {\n        this.gameManager.setGameInfo(this.gameInfo);\n      }\n    })\n  }\n\n  ngOnDestroy() {\n    this.backendSubscription.unsubscribe();\n  }\n\n\n  onJoin() {\n    \n    this.backendManager.joinGame(this.gameInfo, this.gameManager.playerName)\n  }\n}\n","<h4 mat-dialog-title> Join Game</h4>\n<main >\n\n    <section>\n        <p>{{gameInfo.hostName}}</p>\n        <p>{{gameInfo.gameType}}</p>\n        <p>{{gameInfo.gameName}}</p>\n    </section>\n\n\n    <div >\n        <button mat-flat-button mat-dialog-close color=\"accent\" type=\"button\" >Back</button>\n        <button mat-flat-button color=\"primary\" type=\"button\" (click)=\"onJoin()\" >Join</button>\n    </div>\n</main>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MatDialog, MatDialogRef, MatDialogState } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\n//components\nimport { HostGameComponent } from \"./host-game/host-game.component\";\nimport { JoinGameComponent } from \"./join-game/join-game.component\";\nimport { AgainstPcComponent } from \"./against-pc/against-pc.component\";\nimport { WaitingComponent } from \"./waiting/waiting.component\";\n//services\nimport { ManagerService } from \"../shared/manager.service\";\nimport { GameManagerService } from '../shared/game-manager.service';\nimport { BackendService } from \"../shared/backend.service\";\n//rxjs\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-lobby',\n  templateUrl: './lobby.component.html',\n  styleUrls: ['./lobby.component.css']\n})\nexport class LobbyComponent implements OnInit, OnDestroy {\n\n  //subscriptions\n  gameInfoSubscription : Subscription;\n  backendSubscription : Subscription;\n  checkDataBase : number\n  \n  dataSource = new MatTableDataSource<GameInfo>();\n  displayedColumns = [\"gameName\" ,\"hostName\", \"gameType\"];\n  private dialogRef : MatDialogRef<HostGameComponent | JoinGameComponent | AgainstPcComponent | WaitingComponent>;\n\n  constructor(\n    private dialog : MatDialog, \n    private manager: ManagerService, \n    private gameManager: GameManagerService,\n    private router: Router,\n    private databaseManager: BackendService) { }\n\n  ngOnInit(): void {\n\n    this.gameInfoSubscription = this.gameManager.gameInfoSubject.subscribe(gameInfo => {\n      //check close the dialog\n      if (this.dialogRef) {\n        this.dialogRef.close();\n        this.dialogRef = null;\n      }\n\n      if (gameInfo.gameName === null) {\n        return\n      }\n\n      if (gameInfo.opponentPC){\n        this.router.navigate(['/game']);\n      }    \n\n      if (gameInfo.playersReady) {\n        clearInterval(this.checkDataBase);\n        this.router.navigate(['/game'])\n      } else if (!gameInfo.playersReady) {\n        if (gameInfo.hostName === this.gameManager.playerName) {\n          this.dialogRef = this.dialog.open(WaitingComponent, {data :  {message: \"Waiting for client to join.\", isHost: true}})\n        } else {\n          this.dialogRef = this.dialog.open(WaitingComponent, {data :  {message: \"Waiting for host's response.\", isHost: false}})\n        }\n      }\n    })\n\n    this.backendSubscription = this.databaseManager.getBackEndSubject().subscribe(brResponse => {\n      if (brResponse.extra === \"logoutUser\") {\n        this.router.navigate([\"/title\"])\n      } else if (brResponse.extra === \"gameList\") {\n        clearInterval(this.checkDataBase)\n        this.setGameList(brResponse)\n        this.startDBQueryInterval();\n      } else if (brResponse.extra === \"gameDeleted\") {\n        clearInterval(this.checkDataBase)\n        this.gameManager.clearGameInfo();\n        this.setGameList(brResponse)\n        this.startDBQueryInterval();\n      }\n    })\n\n    this.startDBQueryInterval();\n  }\n\n  ngOnDestroy() {\n    this.gameInfoSubscription.unsubscribe();\n    this.backendSubscription.unsubscribe();\n    \n  }\n\n  onExit() {\n\n    this.databaseManager.logOut();\n  }\n\n  onHostGame() {\n    const hostName = this.gameManager.playerName;\n    this.dialogRef = this.dialog.open(HostGameComponent, {data : hostName});\n  }\n\n  onAgainstPC() {\n    this.dialogRef = this.dialog.open(AgainstPcComponent);\n  }\n\n  onClickRow(row : GameInfo) {\n    if (row.inSession) {\n      return;\n    }\n    this.dialogRef = this.dialog.open(JoinGameComponent, {data: row});\n  }\n\n  getUserName() {\n    return this.gameManager.playerName;\n  }\n\n  setGameList(brResponse : BackendResponse) {\n\n    if (brResponse.gameList.length === 0) {\n      this.dataSource.data = []\n      return;\n    }\n\n    let gl : GameInfo[] = brResponse.gameList.map(document => {\n      return {\n        hostName: document.host,\n        gameType: document.gameType,\n        gameName: document.gameName,\n        userId: document.hostId\n      }\n    })\n\n    this.dataSource.data = gl;\n  }\n\n  startDBQueryInterval() {\n    this.checkDataBase = setInterval(() => {\n      console.log(\"fetching games\")\n      this.databaseManager.fetchGameList();\n    },\n    500)\n  }\n}\n","<main>\n    <h6 style=\"margin-left: 1rem\">Welcome {{getUserName()}} !</h6>\n\n    <section id=\"table\">\n        <mat-table [dataSource]=\"dataSource\">\n\n            <ng-container matColumnDef=\"gameName\">\n                <mat-header-cell *matHeaderCellDef>\n                    Game Name\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    {{element.gameName}}\n                </mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"gameType\">\n                <mat-header-cell *matHeaderCellDef>\n                    Game Type\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    {{element.gameType}}\n                </mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"hostName\">\n                <mat-header-cell *matHeaderCellDef>\n                    Player Name\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    {{element.hostName}}\n                </mat-cell>\n            </ng-container>\n\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"onClickRow(row)\">\n\n            </mat-row>\n        </mat-table>\n    </section>\n\n    <section id=\"form\">\n        <!-- form controls -->\n        <div>\n            <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"onExit()\">Exit</button>\n            <button mat-flat-button color=\"secondary\" style=\"border: 1px grey inset;\" type=\"button\" (click)=\"onAgainstPC()\">Against PC</button>\n            <button mat-raised-button color=\"primary\" type=\"button\" (click)=\"onHostGame()\">Host Game</button>\n        </div>\n\n    </section>\n\n</main>","import { ThrowStmt } from '@angular/compiler';\nimport { Component, Inject, OnInit, OnDestroy } from '@angular/core';\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { Subscription } from 'rxjs';\nimport { BackendService } from 'src/app/shared/backend.service';\nimport { GameManagerService } from 'src/app/shared/game-manager.service';\n\n@Component({\n  selector: 'app-waiting',\n  templateUrl: './waiting.component.html',\n  styleUrls: ['./waiting.component.css']\n})\nexport class WaitingComponent implements OnInit, OnDestroy {\n\n  checkDataBase : number;\n  backendSubscription : Subscription;\n  gInfo : GameInfo;\n  confirm : boolean = false;\n  denied : boolean = false;\n  clientName : string;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: {message: string, isHost: boolean},\n    private backendManager: BackendService, \n    private gameManager: GameManagerService ) { }\n\n  ngOnInit(): void {\n    this.gInfo = this.gameManager.getGameInfo();\n    this.gInfo.inSession = true;\n\n    this.backendSubscription = this.backendManager.getBackEndSubject().subscribe(response => {\n      if (response.extra === \"gameJoin\") {\n        this.data.message = \"Joining game!\"\n        this.clearDBInterval();\n        this.gameManager.joinGame(this.gInfo);\n      } else if (response.extra === \"hostDenied\") {\n        this.confirm = true;\n        this.denied = true;\n        this.data.message = \"Host denied\";\n      } else if (response.extra === \"waitingOnHost\" && !this.denied) {\n        this.data.message = \"Waiting for host's response.\"\n      } else if (response.extra === \"waitingForClient\") {\n        this.confirm = false\n        this.data.message = \"Waiting for client to join...\"\n      } else if (response.extra === \"clientIsWaiting\") {\n        this.data.message = response.client + \" would like to play.\"\n        this.clientName = response.client;\n        this.confirm = true;\n      } else if (response.extra === \"gameCancelled\"){\n        this.backendManager.deleteGame(this.gInfo)\n      } else if (response.extra === \"clientLeft\") {\n        this.gameManager.clearGameInfo();\n      }\n    })\n\n    this.startDBQueryInterval(this.data.isHost);\n  }\n\n  ngOnDestroy() { \n    //this.backendManager.deleteGame(this.gInfo);\n    this.backendSubscription.unsubscribe();\n    this.clearDBInterval();\n  }\n\n  toLobby() {\n    this.clearDBInterval()\n    this.gInfo.inSession = false;\n    this.backendManager.cancelWaiting(this.gInfo, this.data.isHost)\n  }\n\n  onDenied() {\n    this.clearDBInterval()\n    this.gInfo.inSession = false;\n    this.gameManager.clearGameInfo();\n  }\n\n  yes() {\n    this.clearDBInterval();\n    this.gInfo.opponentName = this.clientName;\n    this.gInfo.playersReady = true;\n    this.confirm = false;\n    this.data.message = \"Fetching from database...\"\n    this.backendManager.confirmClient(this.gInfo, this.gInfo.userId)\n  }\n\n  no() {\n    this.clearDBInterval();\n    this.confirm = false;\n    this.backendManager.denyClient(this.gInfo, this.gInfo.userId)\n    this.startDBQueryInterval(this.data.isHost)\n\n  }\n\n  startDBQueryInterval(isHost : boolean) {\n\n    this.checkDataBase = setInterval(() => {\n      this.backendManager.check(this.gInfo, this.gInfo.userId, isHost)\n    }, 1000)\n  }\n\n  clearDBInterval() {\n    if (this.checkDataBase) {\n      clearInterval(this.checkDataBase)\n    }\n  }\n}\n","<h4 mat-dialog-title> Waiting </h4>\n<main >\n\n    <section>\n        <p>{{data.message}}</p>\n    </section>\n\n    <section id=\"spinner\">\n        <app-loading *ngIf=\"!confirm\"></app-loading>\n    </section>\n\n    <div *ngIf=\"!confirm && !denied\">\n        <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"toLobby()\">To Lobby</button>\n    </div>\n    <div *ngIf=\"denied\">\n        <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"onDenied()\">Okay</button>\n    </div>\n    <div *ngIf=\"confirm && !denied\" id=\"confirm\">\n        <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"no()\">No</button>\n        <button mat-flat-button color=\"primary\" type=\"button\" (click)=\"yes()\">Yes</button>\n    </div>\n</main>","import { NgModule } from '@angular/core';\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatSelectModule } from \"@angular/material/select\";\n\n@NgModule({\n  declarations: [],\n  imports: [\n    MatButtonModule,\n    MatInputModule,\n    MatTableModule,\n    MatDialogModule,\n    MatSelectModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatInputModule,\n    MatTableModule,\n    MatDialogModule,\n    MatSelectModule\n  ]\n})\nexport class MaterialModule { }\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { LobbyComponent } from './lobby/lobby.component';\nimport { TitleScreenComponent } from \"./title-screen/title-screen.component\";\nimport { GameComponent } from \"./game/game.component\";\n\nconst routes : Routes = [\n    {path: \"\", redirectTo: \"title\", pathMatch: 'full'},\n    {path: \"title\", component: TitleScreenComponent},\n    {path: \"lobby\", component: LobbyComponent},\n    {path: \"game\", component: GameComponent}\n\n];\n\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class RoutingModule {\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable, Subject } from 'rxjs';\nimport { Router } from \"@angular/router\";\nimport { TicTacToeBoard } from './board/ttt-board';\nimport { ConnectFourBoard } from './board/cf-board';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BackendService {\n\n  backendSubject = new Subject<BackendResponse>();\n  token : string;\n  username : string;\n  userId: string;\n  private BASE_URL : string = \"http://localhost:3000/api/\";\n  constructor(private http : HttpClient) { }\n\n  getBackEndSubject() : Observable<BackendResponse> {\n    return this.backendSubject.asObservable();\n  }\n\n  logIn(username : string) {\n\n    this.http.post<BackendResponse>(\n      this.BASE_URL + \"user/login\",\n      {username : username}\n    ).subscribe(response => {\n      if (response.status === 201) {\n        this.token = response.token;\n        this.username = response.username\n        this.userId = response.userId\n        this.backendSubject.next(response)\n      } else if (response.status === 304) {\n        console.log(\"username is already in use\")\n      }\n\n    })\n    \n  }\n\n  logOut() {\n    this.http.post<BackendResponse>(\n      this.BASE_URL + \"user/logout/\" + this.username + \"/\" + this.token,\n      {username: this.username, token: this.token}\n    ).subscribe(response => {\n      if (response.status === 200) {\n        this.token = null;\n        this.username = null;\n        this.backendSubject.next(response)\n      }\n\n    })\n  }\n\n  hostGame(gInfo : GameInfo) {\n\n    this.http.post<BackendResponse>(\n      this.BASE_URL + \"lobby/hostGame\",\n      {\n        hostName: gInfo.hostName,\n        hostId: this.userId,\n        gameName: gInfo.gameName,\n        gameType: gInfo.gameType,\n      }\n    ).subscribe(response => {\n      this.backendSubject.next(response)\n    })\n  }\n\n  joinGame(gInfo : GameInfo, clientName: string) {\n    this.http.post<BackendResponse>(\n      this.BASE_URL + \"lobby/joinGame\",\n      {\n        hostName: gInfo.hostName,\n        hostId: gInfo.userId,\n        gameName: gInfo.gameName,\n        gameType: gInfo.gameType,\n        clientName: clientName\n      }).subscribe(response => {\n        this.backendSubject.next(response)\n      })\n  }\n\n  cancelWaiting(gInfo: GameInfo, isHost: boolean) {\n    this.http.post<BackendResponse>(\n      this.BASE_URL + \"lobby/cancelWaiting\",\n      {\n        hostName: gInfo.hostName, \n        hostId: gInfo.userId, \n        gameName: gInfo.gameName,\n        isHost: isHost\n      })\n      .subscribe(response => {\n        this.backendSubject.next(response)\n      })\n  }\n\n  confirmClient(gInfo : GameInfo, hostId: string) {\n    this.http.post<BackendResponse>(\n      this.BASE_URL + \"lobby/hostGame/hostConfirm\",\n      {\n        hostName: gInfo.hostName, \n        hostId: hostId, \n        gameName: gInfo.gameName,\n      })\n      .subscribe(response => {\n        console.log(response)\n        this.backendSubject.next(response)\n      }) \n  }\n\n  denyClient(gInfo: GameInfo, hostId: string) {\n    this.http.post<BackendResponse>(\n      this.BASE_URL + \"lobby/hostGame/hostDeny\",\n      {\n        hostName: gInfo.hostName, \n        hostId: hostId, \n        gameName: gInfo.gameName,\n      })\n      .subscribe(response => {\n        this.backendSubject.next(response);\n      })\n  }\n\n  check(gInfo : GameInfo, hostId: string, isHost: boolean) {\n\n    this.http.post<BackendResponse>(\n      this.BASE_URL + \"lobby/check\",\n      {\n        hostName: gInfo.hostName,\n        hostId: hostId,\n        gameName: gInfo.gameName,\n        isHost: isHost\n      }\n    ).subscribe(response => {\n      this.backendSubject.next(response)\n    })\n  }\n\n  checkGameState() {\n    this.http.post<BackendResponse>(\n      this.BASE_URL + \"gameplay/check\",\n      {\n        \n      }\n    ) \n  }\n\n  startGame(gInfo: GameInfo, board: TicTacToeBoard | ConnectFourBoard) {\n    this.http.post<BackendResponse>(\n      this.BASE_URL + \"gameplay/startGame\",\n      {\n        gameMode: gInfo.gameType,\n        hostName: gInfo.hostName,\n        clientName: gInfo.opponentName,\n        board: board.boardArray\n      }).subscribe(response => {\n        this.backendSubject.next(response)\n      })\n  }\n\n  fetchGameList() {\n    this.http.get<BackendResponse>(\n      this.BASE_URL + \"lobby/fetchGameList\",\n    ).subscribe(response => {\n      this.backendSubject.next(response)\n    })\n  }\n\n  deleteGame(gInfo:GameInfo){\n    this.http.post<BackendResponse>(\n      this.BASE_URL + \"lobby/deleteGame\",\n      {\n        hostName: gInfo.hostName,\n        hostId: gInfo.userId,\n        gameType: gInfo.gameType\n      }\n    ).subscribe(response => {\n      this.backendSubject.next(response)\n    })\n  }\n\n}\n","import { Subject } from \"rxjs\";\n\nexport abstract class Board {\n\n    constructor(canvas : HTMLCanvasElement, numberOfRows: number, numberOfCols: number) {\n        this.canvas = canvas;\n        this.context = canvas.getContext('2d');\n        this.lengthOfCol = numberOfRows;\n        this.lengthOfRow = numberOfCols;\n\n        this.emptyBoard();\n        this.setCanvasDimensions(this.canvas.width,this.canvas.height);\n    }\n\n    public boardArray : Array<BoardPiece[]> //stroes the pieces\n\n    public canvas : HTMLCanvasElement;\n    public context : CanvasRenderingContext2D;\n    public canvasSubject = new Subject<HTMLCanvasElement>();\n    public lengthOfCol : number; //number of spots in a row or column\n    public lengthOfRow : number;\n    public emptySpots : number;\n    public unsetAndEmptySpots : number; \n\n    abstract checkForWinner();\n    abstract rowColToString(rc : BoardPiece[]);\n    abstract clickBoard(x:number,y:number):BoardPiece;\n    abstract getBoardPiece(r:number,c:number):BoardPiece;\n    abstract drawBoard();\n    abstract printBoard();\n    abstract drawPieces();\n\n    clearBoard() {\n        this.context.clearRect(0,0,this.canvas.width, this.canvas.height);\n        this.canvasSubject.next(this.canvas);\n    }\n\n    placePiece(index: number[], playerPiece:string, isFinal : boolean) {\n        let boardPiece = this.boardArray[index[0]][index[1]];\n        boardPiece.piece = playerPiece;\n        \n        if (isFinal) {\n            this.unsetAndEmptySpots -= 1;\n            boardPiece.set = true;            \n        }\n\n        this.boardArray[index[0]][index[1]] = boardPiece;\n        this.emptySpots = this.emptySpots - 1 <= 0 ? 0 : this.emptySpots - 1;\n\n    }\n\n    removePiece(index: number[]) {\n        let bp : BoardPiece = this.boardArray[index[0]][index[1]];\n\n        if (bp.set) {\n            console.log(\"piece is set. cannot be removed!\")\n            return\n        }\n        this.boardArray[index[0]][index[1]] = {set : false, piece : \"\", index : index}\n        this.emptySpots++;\n    }\n    \n    drawBoardAndPieces() {\n        this.clearBoard();\n        this.drawBoard();\n        this.drawPieces();\n        this.canvasSubject.next(this.canvas);\n    }\n\n\n    emptyBoard() {\n\n        this.emptySpots = this.lengthOfRow*this.lengthOfCol;\n        this.boardArray = new Array(this.lengthOfCol);\n\n        for (let i = 0; i < this.lengthOfCol; i++){\n            this.boardArray[i] = new Array<BoardPiece>(this.lengthOfRow)\n            for (let j = 0; j < this.lengthOfRow; j++) {\n                this.boardArray[i][j] = {piece: \"\", index: [i,j], set: false}\n            }\n        }\n    }\n\n    resetBoard() {\n        this.emptyBoard();\n        this.drawBoard();\n    }\n    \n    setCanvasDimensions(width=this.canvas.width, height=this.canvas.height) {\n        this.canvas.width = width;\n        this.canvas.height = height;\n    }\n}\n\n","import { Board } from \"./abstract.board\";\n\nexport class ConnectFourBoard extends Board{\n\n    constructor(canvas : HTMLCanvasElement) {\n        super(canvas, 7, 6);\n    }\n\n    checkForWinner() : string{\n        return \"\"\n    }\n    \n    getBoardPiece(r:number,c:number){\n        return {index: [], set: false, piece: \"\"}\n    }\n\n    drawBoard() {\n        \n    }\n\n    drawPieces() {\n\n    }\n    \n    clickBoard(x:number,y:number) {\n        return {index: [], set: false, piece: \"\"}\n    }\n\n    rowColToString(rc : BoardPiece[]) {\n        return \"\"\n    }\n\n    printBoard() {\n        return []\n    }\n}","import { Board } from \"./abstract.board\";\n\nexport class TicTacToeBoard extends Board{\n    \n    constructor(canvas : HTMLCanvasElement) {\n        super(canvas, 3, 3);\n        this.emptySpots = 9;\n        this.unsetAndEmptySpots = 9;\n        this.drawBoardAndPieces();\n        console.log(this.boardArray);\n    }\n\n    checkForWinner() : string {\n\n        const checkDiag1 = this.boardArray[0][0].piece === this.boardArray[1][1].piece &&\n                           this.boardArray[1][1].piece === this.boardArray[2][2].piece\n        const checkDiag2 = this.boardArray[2][0].piece === this.boardArray[1][1].piece &&\n                           this.boardArray[1][1].piece === this.boardArray[0][2].piece\n        \n        if (checkDiag1){\n            return this.boardArray[0][0].piece\n        } else if (checkDiag2) {\n            return this.boardArray[2][0].piece\n        }\n        //check rows\n        for (let r = 0; r < 3; r++) {\n            let currentRow : BoardPiece[] = this.boardArray[r];\n            let str : string = this.rowColToString(currentRow)\n\n            if (str === \"xxx\") {\n                return \"x\"\n            } else if (str == \"ooo\") {\n                return \"o\"\n            }\n            \n        }\n\n        //check cols \n        let row0 : BoardPiece[] = this.boardArray[0];\n        let row1 : BoardPiece[] = this.boardArray[1];\n        let row2 : BoardPiece[] = this.boardArray[2];\n\n        for (let c = 0; c < 3; c++) {\n            let currentCol : BoardPiece[] = [row0[c],row1[c],row2[c]]\n            let str : string = this.rowColToString(currentCol);\n\n            if (str === \"xxx\") {\n                return \"x\"\n            } else if (str == \"ooo\") {\n                return \"o\"\n            }\n        }\n        return \"\"\n    }\n\n    drawBoard() {\n\n        console.log(this.canvas.width, this.canvas.height)\n        //draw columns\n        let i = this.canvas.width/this.lengthOfRow\n        while (i < this.canvas.width) {\n            this.context.beginPath() \n            this.context.moveTo(i,0);\n            this.context.lineTo(i,this.canvas.height);\n            i+=this.canvas.width/this.lengthOfRow;\n            this.context.stroke()\n        }\n\n        i = this.canvas.height/this.lengthOfCol\n\n        //draw rows\n        while (i < this.canvas.height) {\n            this.context.beginPath() \n            this.context.moveTo(0,i);\n            this.context.lineTo(this.canvas.width,i);\n            i+=this.canvas.height/this.lengthOfCol;\n            this.context.stroke()\n        }       \n\n\n    }\n\n    drawPieces() {\n\n        let i = 0;\n        let j = 0;\n        let widthOfOneSpot = this.canvas.width/this.lengthOfCol;\n        let heightOfOneSpot = this.canvas.height/this.lengthOfRow;\n        this.context.lineWidth = 5;\n        while (true) {\n            \n            let piece = this.boardArray[i][j];\n            this.context.beginPath()\n            if (piece.piece === \"x\") {\n\n                this.context.moveTo(widthOfOneSpot*(j+0.5),heightOfOneSpot*(i+0.5));\n                this.context.lineTo(widthOfOneSpot*(j+0.25),heightOfOneSpot*(i+0.25));\n                this.context.moveTo(widthOfOneSpot*(j+0.5),heightOfOneSpot*(i+0.5));\n                this.context.lineTo(widthOfOneSpot*(j+0.75),heightOfOneSpot*(i+0.25));\n                this.context.moveTo(widthOfOneSpot*(j+0.5),heightOfOneSpot*(i+0.5));\n                this.context.lineTo(widthOfOneSpot*(j+0.25),heightOfOneSpot*(i+0.75));\n                this.context.moveTo(widthOfOneSpot*(j+0.5),heightOfOneSpot*(i+0.5));\n                this.context.lineTo(widthOfOneSpot*(j+0.75),heightOfOneSpot*(i+0.75));\n\n            } else if (piece.piece === \"o\") {\n                this.context.ellipse(\n                    widthOfOneSpot*(j+0.5),\n                    heightOfOneSpot*(i+0.5),\n                    widthOfOneSpot*0.25,\n                    heightOfOneSpot*0.25,0,0,Math.PI*2);\n            }\n            this.context.stroke();\n            j++;\n\n            if (j > this.lengthOfCol - 1) {\n                j = 0;\n                i++;\n            }\n    \n\n            if (i > this.lengthOfRow - 1) {\n                break;\n            }\n            \n        }\n        this.context.lineWidth = 1;\n\n        \n\n    }\n\n    getBoardPiece( r:number, c:number) : BoardPiece {\n        return this.boardArray[r][c]\n    }\n\n    clickBoard(x:number, y:number) : BoardPiece{\n   \n        let i = 0;\n        let j = 0;\n        let widthOfOneSpot = this.canvas.width/this.lengthOfCol;\n        let heightOfOneSpot = this.canvas.height/this.lengthOfRow;\n        \n\n        //check if click is in cell boundaries\n        while (i < this.lengthOfCol && j < this.lengthOfRow) {\n            let checkCol = x > widthOfOneSpot*j && x < widthOfOneSpot*(j+1);\n            let checkRow = y > heightOfOneSpot*i && y < heightOfOneSpot*(i+1);\n\n            if (checkRow && checkCol) {\n                break;\n            }\n\n            j++;\n\n            if (j === this.lengthOfCol) {\n                j = 0;\n                i++;\n            }\n\n            if (i == this.lengthOfRow) {\n                break;\n            }\n\n\n        }\n        \n        let piece = this.getBoardPiece(i,j);\n        return piece;\n    }\n\n\n    rowColToString(rc : BoardPiece[]) {\n       return rc.map((rc : BoardPiece) => {\n            return rc.piece;\n        }).join(\"\")\n    }\n\n    printBoard() {\n        let str = []\n        for (let r = 0; r < 3; r++) {\n            let rowStr = this.boardArray[r].map( (bp : BoardPiece) => {\n\n                return bp.piece ? bp.piece : \"_\"\n            })\n            str.push(rowStr.join(\"\"))\n        }\n        return str;\n    }\n\n\n}","import { Injectable } from '@angular/core';\nimport { Subject } from \"rxjs\";\nimport { TicTacToeBoard } from \"./board/ttt-board\";\nimport { ConnectFourBoard} from \"./board/cf-board\";\nimport { ComputerPlayer } from \"./player/player\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameManagerService {\n  private gameInfo : GameInfo;\n  private computerPiece : string ;\n\n  gameInfoSubject = new Subject<GameInfo>();\n  playerTurnSubject = new Subject<string>();\n  computerPieceSubject = new Subject<string>();\n  gameEndSubject = new Subject<string>();\n\n  board : TicTacToeBoard | ConnectFourBoard = null;\n  pc : ComputerPlayer;\n\n  playerName : string ;\n  turn : string;\n  gameEnd : boolean = false;\n\n  constructor() { }\n\n  hostGame(gameInfo : GameInfo) {\n    this.setGameInfo(gameInfo)\n  }\n\n  againstPC(gameInfo : GameInfo){\n    this.setGameInfo(gameInfo)\n  }\n\n  \n  joinGame(gameInfo : GameInfo) {\n    gameInfo.playersReady = true;\n    if (gameInfo.hostName != this.playerName) {\n      gameInfo.opponentName = this.playerName\n    }\n    this.setGameInfo(gameInfo)\n  }\n\n  quitGame() {\n    \n    this.clearGameInfo();\n    this.board.clearBoard();\n    this.board.emptyBoard();\n    this.pc.quitGame();\n    this.gameEnd = false;\n    this.board = null;\n    this.pc = null;\n    this.computerPiece = \"\";\n    this.turn = \"\";\n  }\n\n  startGame(canvas : HTMLCanvasElement) {\n    this.gameEnd = false;\n    const ginfo = this.gameInfo;\n\n    \n    \n    if (ginfo.opponentPC) {\n      this.pc = new ComputerPlayer(this.computerPiece,false,ginfo.difficulty,this);\n      this.computerPiece = Math.floor(Math.random()*2) === 0 ? \"o\" : \"x\";\n      let playerPiece = this.computerPiece === \"x\" ? \"o\" : \"x\";\n      this.computerPieceSubject.next(playerPiece);\n      this.turn = Math.floor(Math.random()*2) === 0 ? \"o\" : \"x\"\n      this.playerTurnSubject.next(this.turn);\n    } \n\n    if (ginfo.gameType === \"TTT\") {\n      this.board = new TicTacToeBoard(canvas);\n    } else if (ginfo.gameType === \"CF\") {\n      this.board = new ConnectFourBoard(canvas);\n    }\n    \n\n  }\n\n  endGame(check : string) {\n    this.gameEnd = true;\n    this.board.drawBoardAndPieces();\n    this.gameEndSubject.next(check)\n  }\n\n  confirmMove(move : number[], piece: string) {\n    this.board.placePiece(move,piece,true);\n    let check = this.board.checkForWinner();\n    let movesLeft = this.board.unsetAndEmptySpots;\n    if (check != \"\") {\n      this.endGame(check)\n    }\n    else if (!movesLeft) {\n      this.endGame(\"draw\") \n    } \n    else {\n      this.board.drawBoardAndPieces();\n      this.nextTurn();\n    }\n\n  }\n\n  notFinalMove(move : number[], piece: string) {\n    this.board.placePiece(move,piece,false)\n    this.board.drawBoardAndPieces();\n  }\n\n  removePiece(move: number[]) {\n    this.board.removePiece(move);\n    this.board.drawBoardAndPieces();\n  }\n\n  nextTurn() {\n    this.turn = this.turn === \"x\" ? \"o\" : \"x\";\n    this.playerTurnSubject.next(this.turn);\n  }\n\n  setGameInfo(gameInfo : GameInfo) {\n    this.gameInfo = gameInfo;\n    this.gameInfoSubject.next(gameInfo);\n  }\n\n  getGameInfo() {\n    return this.gameInfo;\n  }\n\n  clearGameInfo() {\n    this.gameInfo = {gameName: null, gameType: null, opponentPC: null, hostName: null}\n    this.gameInfoSubject.next(this.gameInfo);\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.css']\n})\nexport class LoadingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"loadingio-spinner-blocks-3112n02kcmk\">\n    <div class=\"ldio-3flzva71sn7\">\n        <div style='left:38px;top:38px;animation-delay:0s'></div>\n        <div style='left:80px;top:38px;animation-delay:0.125s'></div>\n        <div style='left:122px;top:38px;animation-delay:0.25s'></div>\n        <div style='left:38px;top:80px;animation-delay:0.875s'></div>\n        <div style='left:122px;top:80px;animation-delay:0.375s'></div>\n        <div style='left:38px;top:122px;animation-delay:0.75s'></div>\n        <div style='left:80px;top:122px;animation-delay:0.625s'></div>\n        <div style='left:122px;top:122px;animation-delay:0.5s'></div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ManagerService {\n\n  constructor() { }\n}\n","import { TicTacToeBoard } from \"../board/ttt-board\";\nimport { GameManagerService } from \"../game-manager.service\";\nimport { Subscription } from \"rxjs\";\n\nexport abstract class Player {\n\n    boardArray = [];\n    playerTurnSubscription : Subscription\n    gameEndSubscription : Subscription\n\n    constructor(protected piece : string, protected isHuman : boolean, protected mode : string = \"easy\", protected gameManager : GameManagerService=null) {\n        this.mode = mode;\n    }\n    \n    getIsHuman() {\n        return this.isHuman;\n    }\n\n    getPiece() {\n        return this.piece;\n    }\n\n    abstract playEasy();\n    abstract playMedium();\n    abstract playHard();\n\n\n}","import { Player } from \"./abstract.player\";\nimport { GameManagerService } from \"../game-manager.service\";\nimport { TicTacToeBoard } from '../board/ttt-board';\nimport { verifyHostBindings } from '@angular/compiler';\n\nexport class ComputerPlayer extends Player {\n\n    gameEnd : boolean = false;\n\n    constructor(piece : string, isHuman=false, mode : string = \"easy\", gm: GameManagerService =null){\n        super(piece,isHuman,mode,gm)\n        \n        this.playerTurnSubscription = this.gameManager.playerTurnSubject.subscribe(turn => {\n            if (turn === this.piece && this.gameManager && !this.gameEnd) {\n                let result = this.play()\n                this.decideOnMove(result)\n            }\n        })\n\n        this.gameEndSubscription = this.gameManager.gameEndSubject.subscribe(result => {\n            if (result != \"\") {\n                this.gameEnd = true;\n            }\n        })\n    }\n\n    quitGame() {\n        this.gameEndSubscription.unsubscribe();\n        this.playerTurnSubscription.unsubscribe();\n    }\n\n    decideOnMove(choice: number[]) {\n        this.gameManager.confirmMove(choice,this.piece)\n    }\n\n    play () : number[] {\n        \n        if (this.mode === \"easy\") {\n            return this.playEasy()\n        } else if (this.mode === \"medium\") {\n            return this.playMedium()\n        } else {\n            return this.playHard()\n        }\n    \n        \n\n    }\n \n    playEasy () {\n        let r = Math.floor(Math.random()*3);\n        let c = Math.floor(Math.random()*3);\n        let piece = this.gameManager.board.getBoardPiece(r,c)\n        while (piece.piece != \"\") {\n            r = Math.floor(Math.random()*3);\n            c = Math.floor(Math.random()*3);\n            piece = this.gameManager.board.getBoardPiece(r,c);\n        }\n        return [r,c]\n    }\n\n    playMedium() {\n        const decision = Math.floor(Math.random()*100)\n\n        if (decision >= 60) {\n            return this.playEasy();\n        } else {\n           return this.playMiniMax();\n        }\n    }\n    \n    playHard() {\n        const decision = Math.floor(Math.random()*100)\n\n        if (decision >= 80) {\n            return this.playEasy();\n        } else {\n            return this.playMiniMax();\n        }\n    }\n\n    private playMiniMax() {\n        return this.findBestMove();\n    }\n\n    private findBestMove() {\n        let board = this.gameManager.board;\n        let bestVal: number = this.piece === \"x\" ? -1000 : 1000;\n        let bestMove : number[] = [-1,-1];\n\n        for (let r = 0 ; r < 3; r++) {\n            for (let c = 0; c < 3; c++) {\n                if (board.getBoardPiece(r,c).piece === \"\") {\n                    board.placePiece([r,c], this.piece, false)\n                    let isMaximizer = this.piece === \"x\" ? true : false;\n                    let moveVal = this.miniMax(board,0,!isMaximizer);\n                    board.removePiece([r,c]);\n                    let check = this.piece === \"x\" ? moveVal > bestVal : moveVal < bestVal;\n                    if (check) {\n                        bestMove = [r,c]\n                        bestVal = moveVal\n                    }\n                }\n            }\n        }\n        return bestMove;\n    }\n\n    private miniMax(board: TicTacToeBoard, depth: number, isMax: boolean) : number {\n        const winner = board.checkForWinner();\n        \n        if (winner === \"x\") {\n            return 10 - depth;\n        } else if (winner === \"o\") {\n            return -10 + depth;\n        } \n\n        const movesLeft = board.emptySpots;\n\n        if (movesLeft <= 0) {\n            return 0;\n        }\n\n        if (isMax) {\n            let bestVal = -10000\n            for (let r = 0; r < 3; r++) {\n                for (let c = 0; c < 3; c++) {\n                    if (board.getBoardPiece(r,c).piece === \"\") {\n                        board.placePiece([r,c], \"x\", false)\n                        let value = this.miniMax(board, depth+1, !isMax)\n                        value = !!value ? value : 0;\n                        bestVal = Math.max(bestVal, value)\n                        board.removePiece([r,c])\n                    }\n\n                }\n            }\n            return bestVal\n\n        } else {\n            let bestVal = 10000\n            for (let r = 0; r < 3; r++) {\n                for (let c = 0; c < 3; c++) {\n                    if (board.getBoardPiece(r,c).piece === \"\") {\n                        board.placePiece([r,c], \"o\", false)\n                        let value = this.miniMax(board, depth+1, !isMax)\n                        value = !!value ? value : 0;\n                        bestVal = Math.min(bestVal, value)\n                        board.removePiece([r,c])\n                    }\n\n                }\n            }\n            return bestVal;\n        }\n    }\n}","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NgForm } from \"@angular/forms\";\nimport { Router } from '@angular/router';\nimport { GameManagerService } from '../shared/game-manager.service';\nimport { ManagerService } from \"../shared/manager.service\";\nimport { BackendService } from \"../shared/backend.service\";\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-title-screen',\n  templateUrl: './title-screen.component.html',\n  styleUrls: ['./title-screen.component.css']\n})\nexport class TitleScreenComponent implements OnInit, OnDestroy {\n\n  backendSubscription : Subscription;\n\n  constructor(\n    private router: Router, \n    private gameManager: GameManagerService, \n    private backendService : BackendService) { }\n\n  ngOnInit(): void {\n    this.backendSubscription = this.backendService.backendSubject.subscribe(brResponse  => {\n      if (brResponse.extra === \"accessGranted\") {\n        console.log(brResponse);\n        this.router.navigate(['/lobby'])\n      }\n    })\n  }\n\n  ngOnDestroy() {\n    this.backendSubscription.unsubscribe();\n  }\n\n  onOkay(form : NgForm) {\n    this.gameManager.playerName = form.value.username;\n    this.backendService.logIn(form.value.username);\n    \n  }\n\n}\n","<main>\n    <section id=\"title\">\n        <h1>Tic Tac Toe & Connect 4</h1>\n    </section>\n    <section id=\"form\">\n        <form #f=\"ngForm\" (ngSubmit)=\"onOkay(f)\" >\n            <mat-form-field>\n                <input matNativeControl ngModel name=\"username\" required placeholder=\"Enter Username\">\n            </mat-form-field>\n            <mat-error></mat-error>\n            <button mat-raised-button [disabled]=\"f.invalid || f.pristine\" color=\"primary\">Okay</button>\n        </form>\n    </section>\n</main>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import \"hammerjs\";\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport { RequiredValidator } from '@angular/forms';\n\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n\n"],"sourceRoot":"webpack:///"}