{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/game/game.component.ts","./src/app/game/game.component.html","./src/app/game/not-valid/not-valid.component.ts","./src/app/game/not-valid/not-valid.component.html","./src/app/game/quit-game/quit-game.component.ts","./src/app/game/quit-game/quit-game.component.html","./src/app/lobby/against-pc/against-pc.component.ts","./src/app/lobby/against-pc/against-pc.component.html","./src/app/lobby/host-game/host-game.component.ts","./src/app/lobby/host-game/host-game.component.html","./src/app/lobby/join-game/join-game.component.ts","./src/app/lobby/join-game/join-game.component.html","./src/app/lobby/lobby.component.ts","./src/app/lobby/lobby.component.html","./src/app/lobby/waiting/waiting.component.ts","./src/app/lobby/waiting/waiting.component.html","./src/app/material.module.ts","./src/app/routing.module.ts","./src/app/shared/boards.ts","./src/app/shared/game-manager.service.ts","./src/app/shared/loading/loading.component.ts","./src/app/shared/loading/loading.component.html","./src/app/shared/manager.service.ts","./src/app/title-screen/title-screen.component.ts","./src/app/title-screen/title-screen.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAA0C;;;AAQnC,MAAM,YAAY;IAGvB,YAAoB,MAAe;QAAf,WAAM,GAAN,MAAM,CAAS;QAFnC,UAAK,GAAG,0BAA0B,CAAC;QAGjC,yBAAyB;IAC3B,CAAC;;wEALU,YAAY;4FAAZ,YAAY;QCRzB,2EAEgB;;6FDMH,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAU;AACgD;AACjB;AAEsC;AAC9B;AACE;AACN;AAC7C,YAAY;AACmC;AAC8B;AACpB;AACiB;AACA;AACD;AACA;AACI;AACT;AACE;AAChB;;AAmD/C,MAAM,SAAS;;wFAAT,SAAS,cAVR,2DAAY;4IAUb,SAAS,mBAXT,EAAE,YAPJ;YACP,uEAAa;YACb,4FAAuB;YACvB,0DAAW;YACX,6DAAa;YACb,+DAAc;SACf;mIAYU,SAAS,mBA/BlB,2DAAY;QACZ,yFAAoB;QACpB,qEAAc;QACd,mEAAa;QACb,sFAAiB;QACjB,uFAAiB;QACjB,sFAAiB;QACjB,0FAAkB;QAClB,mFAAgB;QAChB,kFAAgB;QAEhB,sFAAiB,aAGjB,uEAAa;QACb,4FAAuB;QACvB,0DAAW;QACX,6DAAa;QACb,+DAAc;6FAaL,SAAS;cAjCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,yFAAoB;oBACpB,qEAAc;oBACd,mEAAa;oBACb,sFAAiB;oBACjB,uFAAiB;oBACjB,sFAAiB;oBACjB,0FAAkB;oBAClB,mFAAgB;oBAChB,kFAAgB;oBAEhB,sFAAiB;iBAClB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,4FAAuB;oBACvB,0DAAW;oBACX,6DAAa;oBACb,+DAAc;iBACf;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;gBACzB,eAAe,EAAE;oBACf,sFAAiB;oBACjB,uFAAiB;oBACjB,sFAAiB;oBACjB,0FAAkB;oBAClB,kFAAgB;oBAChB,sFAAiB;iBAClB;aACF;;;;;;;;;;;;;;ACrED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiH;AAK7C;AACA;;;;;;;AAO7D,MAAM,aAAa;IAgBxB,YAAoB,WAA+B,EAAU,MAAiB,EAAU,MAAc;QAAlF,gBAAW,GAAX,WAAW,CAAoB;QAAU,WAAM,GAAN,MAAM,CAAW;QAAU,WAAM,GAAN,MAAM,CAAQ;QAN9F,gBAAW,GAAY,GAAG,CAAC;QACnC,aAAQ,GAAY,MAAM,CAAC;QAC3B,iBAAY,GAAY,UAAU,CAAC;QACnC,aAAQ,GAAa,KAAK,CAAC;QAIzB,MAAM,KAAK,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC;QACxC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC;QAEvE,IAAI,KAAK,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,CAAC,CAAC,KAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;SACnE;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAChF,oCAAoC;YACpC,6CAA6C;YAE7C,IAAI,CAAC,QAAQ,EAAE;gBACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;aACjC;YACD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;IACxC,CAAC;IAED,eAAe;QACb,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;QAC7C,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,GAAC,GAAG,CAAC;QAC1C,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,GAAC,GAAG,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAExC,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,KAAK,IAAI,CAAC,WAAW,EAAE;YAC9C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;QAED,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,MAA0B,EAAE,EAAE;YACtG,IAAI,CAAC,MAAM,GAAG,MAAM;QACtB,CAAC,CAAC;IACJ,CAAC;IAGD,QAAQ,CAAC,KAAK;QACZ,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,mBAAmB,CAAC,MAAM,CAAC,UAAU,GAAC,GAAG,EAAE,MAAM,CAAC,WAAW,GAAC,GAAG,CAAC;QACzF,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;IAC9C,CAAC;IAED,aAAa,CAAC,KAAkB;QAE9B,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAM;SACP;QAED,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE;QAC9C,MAAM,CAAC,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QACpC,MAAM,CAAC,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;QACnC,mEAAmE;QACnE,IAAI,UAAU,GAAgB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,EAAC,CAAC,CAAC;QAEpE,IAAI,UAAU,CAAC,OAAO,EAAC;YACrB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,EAAC,IAAI,CAAC,WAAW,CAAC;YAC9D,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;SAC7C;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gFAAiB,CAAC,CAAC;SACtD;IACH,CAAC;IAED,aAAa;IAEb,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gFAAiB,CAAC;IACtD,CAAC;;0EA1FU,aAAa;6FAAb,aAAa;;;;;;6IAAb,oBAAgB;;QCZ7B,uEAEI;QAAA,yEACI;QAAA,qEAAI;QAAA,uDAAmB;QAAA,4DAAK;QAC5B,qEAAI;QAAA,uDAA4B;QAAA,4DAAK;QACzC,4DAAM;QAEN,6EACI;QAAA,+EAES;QAFyC,2IAAS,yBAAqB,IAAC;QAEjF,4DAAS;QACb,4DAAU;QAGV,6EACI;QAAA,6EAA4E;QAAvB,sIAAS,gBAAY,IAAC;QAAC,qEAAS;QAAA,4DAAS;QAC9F,6EAAsD;QAAA,wEAAY;QAAA,4DAAS;QAC/E,4DAAU;QAEd,4DAAO;;QAhBK,0DAAmB;QAAnB,6FAAmB;QACnB,0DAA4B;QAA5B,sGAA4B;;6FDQ3B,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;+QAOS,WAAW;kBADlB,uDAAS;mBAAC,QAAQ,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC;YAsDpC,QAAQ;kBADP,0DAAY;mBAAC,eAAe,EAAE,CAAC,QAAQ,CAAC;;;;;;;;;;;;;;AEvE3C;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAO3C,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;iGAAjB,iBAAiB;QCP9B,wEAAqB;QAAA,gEAAK;QAAA,4DAAK;QAC/B,uEAEI;QAAA,0EACI;QAAA,oEAAG;QAAA,uEAAY;QAAA,4DAAI;QACvB,4DAAU;QAEV,6EACI;QAAA,4EAAuE;QAAA,+DAAI;QAAA,4DAAS;QACxF,4DAAU;QAEd,4DAAO;;6FDJM,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAQ3C,MAAM,iBAAiB;IAE5B,YAAoB,WAA+B;QAA/B,gBAAW,GAAX,WAAW,CAAoB;IAAI,CAAC;IAExD,QAAQ;IACR,CAAC;IAED,GAAG;QACD,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;IAC7B,CAAC;;kFATU,iBAAiB;iGAAjB,iBAAiB;QCR9B,wEAAqB;QAAA,kEAAO;QAAA,4DAAK;QACjC,uEAEI;QAAA,0EACI;QAAA,oEAAG;QAAA,yFAA8B;QAAA,4DAAI;QACzC,4DAAU;QAEV,6EACI;QAAA,4EAAuE;QAAA,6DAAE;QAAA,4DAAS;QAClF,4EAAqE;QAAhB,yIAAS,SAAK,IAAC;QAAC,+DAAG;QAAA,4DAAS;QACrF,4DAAU;QAEd,4DAAO;;6FDJM,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;AAS3C,MAAM,kBAAkB;IAE7B,YAAoB,WAAgC;QAAhC,gBAAW,GAAX,WAAW,CAAqB;IAAI,CAAC;IAEzD,QAAQ;IACR,CAAC;IAED,QAAQ,CAAC,IAAa;QAEpB,MAAM,KAAK,GAAc;YACvB,QAAQ,EAAE,MAAM;YAChB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;YAC7B,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU;YACrC,UAAU,EAAE,IAAI;SACjB;QAED,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC;IACnC,CAAC;;oFAjBU,kBAAkB;kGAAlB,kBAAkB;;QCT/B,wEAAqB;QAAA,qEAAU;QAAA,4DAAK;QACpC,6EAEI;QAFc,0RAAY,iBAAW,IAAC;QAEtC,iFACI;QAAA,4EAAW;QAAA,oEAAS;QAAA,4DAAY;QAChC,gFACI;QAAA,gFACI;QAAA,wEACJ;QAAA,4DAAa;QACb,iFACI;QAAA,uEACJ;QAAA,4DAAa;QACjB,4DAAa;QACjB,4DAAiB;QAEjB,2EACI;QAAA,6EACI;QAAA,kEACJ;QAAA,4DAAS;QACT,6EACI;QAAA,kEACJ;QAAA,4DAAS;QACb,4DAAU;QAGd,4DAAO;;;QANyB,2DAAoC;QAApC,iGAAoC;;6FDVvD,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEC;;;;;;;;;;;AAUpD,MAAM,iBAAiB;IAE5B,YAA6C,QAAiB,EAAU,MAAc,EAAU,WAA+B;QAAlF,aAAQ,GAAR,QAAQ,CAAS;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAoB;IAAI,CAAC;IAEpI,QAAQ;IACR,CAAC;IAED,OAAO,CAAC,IAAa;QAEnB,MAAM,KAAK,GAAc;YACvB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;YAC7B,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;YAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,IAAI,EAAE,IAAI;YACV,UAAU,EAAE,KAAK;SAClB;QACD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAEnC,CAAC;;kFAlBU,iBAAiB,kEAER,wEAAe;iGAFxB,iBAAiB;;QCX9B,wEAAqB;QAAA,oEAAS;QAAA,4DAAK;QACnC,6EAEI;QAFc,yRAAY,gBAAU,IAAC;QAErC,iFACI;QAAA,sEACJ;QAAA,4DAAiB;QAEjB,iFACI;QAAA,4EAAW;QAAA,oEAAS;QAAA,4DAAY;QAChC,gFACI;QAAA,iFACI;QAAA,yEACJ;QAAA,4DAAa;QACb,iFACI;QAAA,uEACJ;QAAA,4DAAa;QACjB,4DAAa;QACjB,4DAAiB;QAEjB,uEACI;QAAA,6EAAsE;QAAA,kEAAM;QAAA,4DAAS;QACrF,6EAA6E;QAAA,iEAAK;QAAA,4DAAS;QAC/F,4DAAM;QAGV,4DAAO;;;QAJyB,2DAAoC;QAApC,iGAAoC;;6FDVvD,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;sBAGc,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEdrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACC;;;;;;AAOpD,MAAM,iBAAiB;IAE5B,YACkC,QAAmB,EAC3C,WAA+B;QADP,aAAQ,GAAR,QAAQ,CAAW;QAC3C,gBAAW,GAAX,WAAW,CAAoB;IAAI,CAAC;IAE9C,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC5B,CAAC;IAGD,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC;;kFAbU,iBAAiB,kEAGlB,wEAAe;iGAHd,iBAAiB;QCR9B,wEAAsB;QAAA,qEAAS;QAAA,4DAAK;QACpC,uEAEI;QAAA,0EACI;QAAA,oEAAG;QAAA,uDAAqB;QAAA,4DAAI;QAC5B,oEAAG;QAAA,uDAAqB;QAAA,4DAAI;QAC5B,oEAAG;QAAA,uDAAqB;QAAA,4DAAI;QAChC,4DAAU;QAGV,uEACI;QAAA,6EAAuE;QAAA,gEAAI;QAAA,4DAAS;QACpF,6EAA0E;QAApB,0IAAS,YAAQ,IAAC;QAAE,gEAAI;QAAA,4DAAS;QAC3F,4DAAM;QACV,4DAAO;;QAVI,0DAAqB;QAArB,sFAAqB;QACrB,0DAAqB;QAArB,sFAAqB;QACrB,0DAAqB;QAArB,sFAAqB;;6FDEnB,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;sBAII,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEX3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAEA;AAC7D,YAAY;AACwD;AACA;AACG;AACR;;;;;;;;;ICA/C,kFACI;IAAA,sEACJ;IAAA,4DAAkB;;;IAClB,2EACI;IAAA,uDACJ;IAAA,4DAAW;;;IADP,0DACJ;IADI,+FACJ;;;IAIA,kFACI;IAAA,sEACJ;IAAA,4DAAkB;;;IAClB,2EACI;IAAA,uDACJ;IAAA,4DAAW;;;IADP,0DACJ;IADI,+FACJ;;;IAIA,kFACI;IAAA,wEACJ;IAAA,4DAAkB;;;IAClB,2EACI;IAAA,uDACJ;IAAA,4DAAW;;;IADP,0DACJ;IADI,gGACJ;;;IAGJ,4EAAqE;;;;IACrE,8EAEU;IAF+C,kWAAyB;IAElF,4DAAU;;ADff,MAAM,cAAc;IAUzB,YACU,MAAkB,EAClB,OAAuB,EACvB,WAA+B,EAC/B,MAAc;QAHd,WAAM,GAAN,MAAM,CAAY;QAClB,YAAO,GAAP,OAAO,CAAgB;QACvB,gBAAW,GAAX,WAAW,CAAoB;QAC/B,WAAM,GAAN,MAAM,CAAQ;QARxB,eAAU,GAAG,IAAI,0EAAkB,EAAY,CAAC;QAChD,qBAAgB,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;IAO5B,CAAC;IAE7B,QAAQ;QACN,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG;YACrB,EAAC,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,eAAe,EAAE,UAAU,EAAE,KAAK,EAAC;YAChG,EAAC,QAAQ,EAAE,cAAc,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAC;SACxF,CAAC,aAAY;QAEd,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAChF,wBAAwB;YACxB,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACvB;YAED,IAAI,QAAQ,CAAC,UAAU,EAAC;gBACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACjC;YAGD,IAAI,QAAQ,CAAC,IAAI,EAAE;gBACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2EAAgB,EAAE,EAAC,IAAI,EAAI,uBAAuB,EAAC,CAAC;gBAEtF,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;oBACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;gBACjC,CAAC,EAAE,IAAI,CAAC,CAAC;aACV;QAGH,CAAC,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;IAC1C,CAAC;IAED,UAAU;QACR,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;QAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gFAAiB,EAAE,EAAC,IAAI,EAAG,QAAQ,EAAC,CAAC,CAAC;IAC1E,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mFAAkB,CAAC,CAAC;IACxD,CAAC;IAED,UAAU,CAAC,GAAc;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gFAAiB,EAAE,EAAC,IAAI,EAAE,GAAG,EAAC,CAAC,CAAC;IACpE,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;IACrC,CAAC;;4EAnEU,cAAc;8FAAd,cAAc;QCrB3B,uEACI;QAAA,wEAA8B;QAAA,uDAA2B;QAAA,4DAAK;QAE9D,6EACI;QAAA,+EAEI;QAAA,2EACI;QAAA,kIACI;QAEJ,oHACI;QAER,qEAAe;QAEf,2EACI;QAAA,kIACI;QAEJ,sHACI;QAER,qEAAe;QAEf,4EACI;QAAA,oIACI;QAEJ,sHACI;QAER,qEAAe;QAEf,kIAAoD;QACpD,oHAEA;QACJ,4DAAY;QAChB,4DAAU;QAEV,+EACI;QACA,uEACI;QAAA,8EAAoE;QAAA,gEAAI;QAAA,4DAAS;QACjF,8EAAgH;QAAxB,uIAAS,iBAAa,IAAC;QAAC,sEAAU;QAAA,4DAAS;QACnI,8EAA+E;QAAvB,uIAAS,gBAAY,IAAC;QAAC,qEAAS;QAAA,4DAAS;QACrG,4DAAM;QAEV,4DAAU;QAEd,4DAAO;;QAjD2B,0DAA2B;QAA3B,qGAA2B;QAG1C,0DAAyB;QAAzB,sFAAyB;QA6BhB,2DAAmC;QAAnC,iGAAmC;QAC1C,0DAA+C;QAA/C,kGAA+C;;6FDbvD,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEpBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACC;;;;;AAOpD,MAAM,gBAAgB;IAE3B,YAA4C,OAAgB;QAAhB,YAAO,GAAP,OAAO,CAAS;IAAK,CAAC;IAElE,QAAQ;IAER,CAAC;IAED,MAAM;IAEN,CAAC;;gFAVU,gBAAgB,kEAEP,wEAAe;gGAFxB,gBAAgB;QCR7B,wEAAsB;QAAA,qEAAS;QAAA,4DAAK;QACpC,uEAEI;QAAA,0EACI;QAAA,oEAAG;QAAA,uDAAW;QAAA,4DAAI;QACtB,4DAAU;QAEV,6EACI;QAAA,yEAA2B;QAC/B,4DAAU;QAEV,sEACI;QAAA,4EAA0F;QAApB,wIAAS,YAAQ,IAAC;QAAE,gEAAI;QAAA,4DAAS;QAC3G,4DAAM;QACV,4DAAO;;QAVI,0DAAW;QAAX,4EAAW;;6FDIT,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;sBAGc,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEVrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACgB;AACE;AACF;AACE;AACA;;AAmBpD,MAAM,cAAc;;6FAAd,cAAc;sJAAd,cAAc,kBAfhB;YACP,wEAAe;YACf,sEAAc;YACd,sEAAc;YACd,wEAAe;YACf,wEAAe;SAChB,EAEC,wEAAe;QACf,sEAAc;QACd,sEAAc;QACd,wEAAe;QACf,wEAAe;mIAGN,cAAc,cAdvB,wEAAe;QACf,sEAAc;QACd,sEAAc;QACd,wEAAe;QACf,wEAAe,aAGf,wEAAe;QACf,sEAAc;QACd,sEAAc;QACd,wEAAe;QACf,wEAAe;6FAGN,cAAc;cAjB1B,sDAAQ;eAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE;oBACP,wEAAe;oBACf,sEAAc;oBACd,sEAAc;oBACd,wEAAe;oBACf,wEAAe;iBAChB;gBACD,OAAO,EAAE;oBACP,wEAAe;oBACf,sEAAc;oBACd,sEAAc;oBACd,wEAAe;oBACf,wEAAe;iBAChB;aACF;;;;;;;;;;;;;;ACvBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACE;AACoB;AACvB;;;AAEtD,MAAM,MAAM,GAAY;IACpB,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAC;IAClD,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,yFAAoB,EAAC;IAChD,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;IAC1C,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAC;CAE3C,CAAC;AAOK,MAAM,aAAa;;4FAAb,aAAa;oJAAb,aAAa,kBAHb,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEb,aAAa,uFAFZ,4DAAY;6FAEb,aAAa;cAJzB,sDAAQ;eAAC;gBACN,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAAA;AAA+B;AAExB,MAAe,KAAK;IAEvB,YAAY,MAA0B,EAAE,YAAoB,EAAE,YAAoB;QAgB3E,kBAAa,GAAG,IAAI,4CAAO,EAAqB,CAAC;QAfpD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC;QAChC,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;QAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,EAAE,EAAC;YAClC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAS,IAAI,CAAC,WAAW,CAAC;SAC3D;QACD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACnE,CAAC;IAgBD,UAAU,CAAC,UAAsB,EAAE,WAAkB;QACjD,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAE,WAAW,CAAC;IAC3E,CAAC;IAED,kBAAkB;QACd,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACzC,CAAC;IAED,qBAAqB;QACjB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACnC,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YACrC,IAAI,MAAM,EAAE;gBACR,OAAO,CAAC,MAAM,CAAC;aAClB;iBAAM;gBACH,MAAM,CAAC,MAAM,CAAC;aACjB;QACL,CAAC,CAAC;IACN,CAAC;IAED,UAAU;QACN,IAAI,CAAC,UAAU,GAAC,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,mBAAmB,CAAC,KAAK,GAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,GAAC,IAAI,CAAC,MAAM,CAAC,MAAM;QAClE,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;IAChC,CAAC;CACJ;AAEM,MAAM,cAAe,SAAQ,KAAK;IAErC,YAAY,MAA0B;QAClC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC;QAC1B,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACjC,CAAC;IAED,cAAc;QAEV,iBAAiB;QACjB,IAAI,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAC3G,IAAI,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAE3G,IAAI,UAAU,IAAI,UAAU,EAAE;YAC1B,OAAO,UAAU,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;SACrH;QAED,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,qBAAqB;QACrB,OAAO,CAAC,IAAI,CAAC,EAAE;YACX,IAAI,QAAQ,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAE1J,IAAI,QAAQ,EAAE;gBACV,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;aAC/F;YAED,IAAI,QAAQ,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAClH,IAAI,QAAQ,EAAE;gBACV,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;aAC/D;YACD,CAAC,EAAE,CAAC;SACP;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,SAAS;QAEL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QAClD,cAAc;QACd,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,GAAC,IAAI,CAAC,WAAW;QAC1C,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;YAC1B,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;YACxB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC1C,CAAC,IAAE,IAAI,CAAC,MAAM,CAAC,KAAK,GAAC,IAAI,CAAC,WAAW,CAAC;YACtC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;SACxB;QAED,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAC,IAAI,CAAC,WAAW;QAEvC,WAAW;QACX,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YAC3B,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;YACxB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;YACzC,CAAC,IAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAC,IAAI,CAAC,WAAW,CAAC;YACvC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;SACxB;IAGL,CAAC;IAED,UAAU;QAEN,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,GAAC,IAAI,CAAC,WAAW,CAAC;QACxD,IAAI,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAC,IAAI,CAAC,WAAW,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC;QAC3B,OAAO,CAAC,GAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,WAAW,EAAG;YAE7C,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;YACxB,IAAI,KAAK,KAAK,GAAG,EAAE;gBAEf,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,GAAC,CAAC,CAAC,GAAC,GAAG,CAAC,EAAC,eAAe,GAAC,CAAC,CAAC,GAAC,GAAG,CAAC,CAAC,CAAC;gBACpE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,GAAC,CAAC,CAAC,GAAC,IAAI,CAAC,EAAC,eAAe,GAAC,CAAC,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC;gBACtE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,GAAC,CAAC,CAAC,GAAC,GAAG,CAAC,EAAC,eAAe,GAAC,CAAC,CAAC,GAAC,GAAG,CAAC,CAAC,CAAC;gBACpE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,GAAC,CAAC,CAAC,GAAC,IAAI,CAAC,EAAC,eAAe,GAAC,CAAC,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC;gBACtE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,GAAC,CAAC,CAAC,GAAC,GAAG,CAAC,EAAC,eAAe,GAAC,CAAC,CAAC,GAAC,GAAG,CAAC,CAAC,CAAC;gBACpE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,GAAC,CAAC,CAAC,GAAC,IAAI,CAAC,EAAC,eAAe,GAAC,CAAC,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC;gBACtE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,GAAC,CAAC,CAAC,GAAC,GAAG,CAAC,EAAC,eAAe,GAAC,CAAC,CAAC,GAAC,GAAG,CAAC,CAAC,CAAC;gBACpE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,GAAC,CAAC,CAAC,GAAC,IAAI,CAAC,EAAC,eAAe,GAAC,CAAC,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC;aAEzE;iBAAM,IAAI,KAAK,KAAK,GAAG,EAAE;gBACtB,IAAI,CAAC,OAAO,CAAC,OAAO,CAChB,cAAc,GAAC,CAAC,CAAC,GAAC,GAAG,CAAC,EACtB,eAAe,GAAC,CAAC,CAAC,GAAC,GAAG,CAAC,EACvB,cAAc,GAAC,IAAI,EACnB,eAAe,GAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,IAAI,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC;aAC3C;YACD,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YACtB,CAAC,EAAE,CAAC;YAEJ,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE;gBACtB,CAAC,GAAG,CAAC,CAAC;gBACN,CAAC,EAAE,CAAC;aACP;YAGD,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE;gBACtB,MAAM;aACT;SAEJ;QACD,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC;IAI/B,CAAC;IAED,cAAc,CAAE,CAAQ,EAAE,CAAQ;QAC9B,OAAO,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC;QAChB,OAAO;YACH,OAAO,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,KAAK,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC;SACf,CAAC;IACN,CAAC;IAID,UAAU,CAAC,CAAQ,EAAE,CAAQ;QAGzB,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,GAAC,IAAI,CAAC,WAAW,CAAC;QACxD,IAAI,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAC,IAAI,CAAC,WAAW,CAAC;QAG1D,sCAAsC;QACtC,OAAO,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE;YACjD,IAAI,QAAQ,GAAG,CAAC,GAAG,cAAc,GAAC,CAAC,IAAI,CAAC,GAAG,cAAc,GAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;YAChE,IAAI,QAAQ,GAAG,CAAC,GAAG,eAAe,GAAC,CAAC,IAAI,CAAC,GAAG,eAAe,GAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;YAElE,IAAI,QAAQ,IAAI,QAAQ,EAAE;gBACtB,MAAM;aACT;YAED,CAAC,EAAE,CAAC;YAEJ,IAAI,CAAC,KAAK,IAAI,CAAC,WAAW,EAAE;gBACxB,CAAC,GAAG,CAAC,CAAC;gBACN,CAAC,EAAE,CAAC;aACP;YAED,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE;gBACvB,MAAM;aACT;SAGJ;QACD,IAAI,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QACrC,OAAO,KAAK,CAAC;IACjB,CAAC;CAGJ;AAEM,MAAM,gBAAiB,SAAQ,KAAK;IAEvC,YAAY,MAA0B;QAClC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB,CAAC;IAED,cAAc;IAEd,CAAC;IAED,cAAc,CAAC,CAAQ,EAAC,CAAQ;QAC5B,OAAO,EAAC,OAAO,EAAC,KAAK,EAAC,KAAK,EAAC,EAAE,EAAC;IACnC,CAAC;IAED,SAAS;IAET,CAAC;IAED,UAAU;IAEV,CAAC;IAED,UAAU,CAAC,CAAQ,EAAC,CAAQ;QACxB,OAAO,EAAC,OAAO,EAAC,KAAK,EAAC,KAAK,EAAC,EAAE,EAAC;IACnC,CAAC;CACJ;;;;;;;;;;;;;ACzPD;AAAA;AAAA;AAAA;AAAA;AAA2C;AACZ;AAC6B;;AAIrD,MAAM,kBAAkB;IAQ7B;QANA,oBAAe,GAAG,IAAI,4CAAO,EAAY,CAAC;QAC1C,UAAK,GAAuC,IAAI,CAAC;IAKjC,CAAC;IAEjB,QAAQ,CAAC,QAAmB;QAC1B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;IAC5B,CAAC;IAED,SAAS,CAAC,QAAmB;QAC3B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;IAC5B,CAAC;IAED,QAAQ,CAAC,QAAmB;QAC1B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;IAC5B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,SAAS,CAAC,MAA0B;QAElC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,CAAC,CAAC,KAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QAE3D,eAAe;QACf,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,KAAK,KAAK,EAAE;YACpC,IAAI,CAAC,KAAK,GAAG,IAAI,sDAAc,CAAC,MAAM,CAAC,CAAC;SACzC;aAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,KAAK,IAAI,EAAE;YAC1C,IAAI,CAAC,KAAK,GAAG,IAAI,wDAAgB,CAAC,MAAM,CAAC,CAAC;SAC3C;IAEH,CAAC;IAED,WAAW,CAAC,QAAmB;QAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC;;oFAnDU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCP7B,yEACI;QAAA,yEACI;QAAA,oEAAyD;QACzD,oEAA6D;QAC7D,oEAA6D;QAC7D,oEAA6D;QAC7D,oEAA8D;QAC9D,oEAA6D;QAC7D,oEAA8D;QAC9D,oEAA6D;QACjE,4DAAM;QACV,4DAAM;;6FDJO,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAA2C;;AAKpC,MAAM,cAAc;IAEzB,gBAAgB,CAAC;;4EAFN,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;AAU3C,MAAM,oBAAoB;IAE/B,YAAoB,MAAc,EAAU,WAA+B;QAAvD,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAoB;IAAI,CAAC;IAEhF,QAAQ;IACR,CAAC;IAED,MAAM,CAAC,IAAa;QAClB,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QAClD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;;wFAVU,oBAAoB;oGAApB,oBAAoB;;QCVjC,uEACI;QAAA,6EACI;QAAA,qEAAI;QAAA,kFAAuB;QAAA,4DAAK;QACpC,4DAAU;QACV,6EACI;QAAA,6EACI;QADc,4RAAY,eAAS,IAAC;QACpC,iFACI;QAAA,sEACJ;QAAA,4DAAiB;QACjB,uEAAuB;QACvB,6EAA+E;QAAA,gEAAI;QAAA,4DAAS;QAChG,4DAAO;QACX,4DAAU;QACd,4DAAO;;;QAH+B,2DAAoC;QAApC,iGAAoC;;6FDA7D,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AETD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkB;AAC6B;AAIU;;;AAKzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'tic-tac-toe-connect-four';\n\n  constructor(private router : Router) {\n    // router.navigate(['/'])\n  }\n}\n","<router-outlet>\n    \n</router-outlet>","// modules\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RoutingModule } from \"./routing.module\";\nimport { MaterialModule } from \"./material.module\";\nimport { FormsModule } from '@angular/forms';\n//components\nimport { AppComponent } from './app.component';\nimport { TitleScreenComponent } from './title-screen/title-screen.component';\nimport { LobbyComponent } from \"./lobby/lobby.component\";\nimport { HostGameComponent } from \"./lobby/host-game/host-game.component\";\nimport { JoinGameComponent } from \"./lobby/join-game/join-game.component\";\nimport { QuitGameComponent } from \"./game/quit-game/quit-game.component\";\nimport { NotValidComponent } from \"./game/not-valid/not-valid.component\";\nimport { AgainstPcComponent } from \"./lobby/against-pc/against-pc.component\";\nimport { WaitingComponent } from \"./lobby/waiting/waiting.component\"\nimport { LoadingComponent } from \"./shared/loading/loading.component\";\nimport { GameComponent } from \"./game/game.component\";\n\n\ndeclare global {\n  export interface GameInfo {\n    hostName: string;\n    gameType: string;\n    gameName: string;\n    opponentPC: boolean;\n    opponentName?: string;\n    host?: boolean;\n  }\n  export interface BoardPiece {\n    isValid: boolean;\n    index: number[];\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TitleScreenComponent,\n    LobbyComponent,\n    GameComponent,\n    HostGameComponent,\n    JoinGameComponent, \n    QuitGameComponent,\n    AgainstPcComponent,\n    LoadingComponent,\n    WaitingComponent,\n    \n    NotValidComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    RoutingModule,\n    MaterialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    HostGameComponent, \n    JoinGameComponent, \n    QuitGameComponent, \n    AgainstPcComponent,\n    WaitingComponent,\n    NotValidComponent\n  ]\n})\nexport class AppModule { }\n","import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { GameManagerService } from '../shared/game-manager.service';\nimport { QuitGameComponent } from './quit-game/quit-game.component';\nimport { NotValidComponent } from './not-valid/not-valid.component';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  private gameInfoSubscription : Subscription; \n  private canvasSubscription : Subscription;\n\n  @ViewChild('canvas', {static: false})\n  private canvasElRef: ElementRef<HTMLCanvasElement>;\n  private canvas : HTMLCanvasElement;\n  private context : CanvasRenderingContext2D;\n  private dialogRef: MatDialogRef<QuitGameComponent | NotValidComponent>;\n  private playerPiece : string = \"o\";\n  hostName : string = \"host\";\n  opponentName : string = \"opponent\";\n  turnBool : boolean = false;\n\n\n  constructor(private gameManager: GameManagerService, private dialog: MatDialog, private router: Router) { \n    const gInfo = gameManager.getGameInfo();\n    this.hostName = gInfo.hostName;\n    this.opponentName = gInfo.opponentPC ? \"Computer\" : gInfo.opponentName;\n\n    if (gInfo.opponentPC) {\n      this.playerPiece = Math.floor(Math.random()*2)  === 1 ? \"x\" : \"o\";\n    }\n  }\n\n  ngOnInit(): void {\n    this.gameInfoSubscription = this.gameManager.gameInfoSubject.subscribe(gameInfo => {\n      // this.hostName = gameInfo.hostName\n      // this.opponentName = gameInfo.opponentName;\n\n      if (!gameInfo) {\n        this.router.navigate(['/lobby'])\n      } \n      this.dialogRef.close();\n    })\n  }\n\n  ngOnDestroy() {\n    this.gameInfoSubscription.unsubscribe();\n    this.canvasSubscription.unsubscribe();\n  }\n\n  ngAfterViewInit() {\n    this.canvas = this.canvasElRef.nativeElement;\n    this.canvas.width = window.innerWidth*0.7;\n    this.canvas.height = window.innerHeight*0.8;\n    this.gameManager.startGame(this.canvas);\n    \n    if (this.gameManager.turn === this.playerPiece) {\n      this.turnBool = true;\n    }\n\n    this.canvasSubscription = this.gameManager.board.canvasSubject.subscribe((canvas : HTMLCanvasElement) => {\n      this.canvas = canvas\n    })\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event){\n    this.gameManager.board.setCanvasDimensions(window.innerWidth*0.7, window.innerHeight*0.8)\n    this.gameManager.board.drawBoardAndPieces();\n  }\n\n  onCanvasClick(event : MouseEvent) {\n\n    if (!this.turnBool) {\n      return\n    }\n\n    let rect = this.canvas.getBoundingClientRect()\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    //console.log(event.clientX - rect.left, event.clientY - rect.top);\n    let boardPiece : BoardPiece = this.gameManager.board.clickBoard(x,y)\n\n    if (boardPiece.isValid){\n      this.gameManager.board.placePiece(boardPiece,this.playerPiece)\n      this.gameManager.board.drawBoardAndPieces();\n    } else {\n      this.dialogRef = this.dialog.open(NotValidComponent);\n    }\n  }\n\n  onConfirmMove() {\n\n  }\n\n  onQuitGame() {\n    this.dialogRef = this.dialog.open(QuitGameComponent)\n  }\n  \n\n}\n","\n<main>\n\n    <div id=\"banner\">\n        <h6>Host : {{hostName}}</h6>\n        <h6>Opponent : {{opponentName}} </h6>\n    </div>\n\n    <section id=\"canvasContainer\">\n        <canvas #canvas style=\"border: 5px inset indigo;\" (click)=\"onCanvasClick($event)\">\n\n        </canvas>\n    </section>\n\n\n    <section id=\"buttons\">\n        <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"onQuitGame()\">Quit Game</button>\n        <button mat-flat-button color=\"primary\" type=\"button\">Confirm Move</button>\n    </section>\n\n</main>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-valid',\n  templateUrl: './not-valid.component.html',\n  styleUrls: ['./not-valid.component.css']\n})\nexport class NotValidComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h4 mat-dialog-title>Error</h4>\n<main>\n\n    <section>\n        <p>Invalid move</p>\n    </section>\n\n    <section id=\"buttons\">\n        <button mat-flat-button mat-dialog-close color=\"primary\" type=\"button\">Okay</button>\n    </section>\n\n</main>","import { Component, OnInit } from '@angular/core';\nimport { GameManagerService } from \"../../shared/game-manager.service\";\n\n@Component({\n  selector: 'app-quit-game',\n  templateUrl: './quit-game.component.html',\n  styleUrls: ['./quit-game.component.css']\n})\nexport class QuitGameComponent implements OnInit {\n\n  constructor(private gameManager: GameManagerService) { }\n\n  ngOnInit(): void {\n  }\n\n  yes() {\n    this.gameManager.quitGame()\n  }\n\n}\n","<h4 mat-dialog-title>Confirm</h4>\n<main>\n\n    <section>\n        <p>Are you sure you want to quit?</p>\n    </section>\n\n    <section id=\"buttons\">\n        <button mat-flat-button mat-dialog-close color=\"primary\" type=\"button\">No</button>\n        <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"yes()\">Yes</button>\n    </section>\n\n</main>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { GameManagerService } from 'src/app/shared/game-manager.service';\n\n@Component({\n  selector: 'app-against-pc',\n  templateUrl: './against-pc.component.html',\n  styleUrls: ['./against-pc.component.css']\n})\nexport class AgainstPcComponent implements OnInit {\n\n  constructor(private gameManager : GameManagerService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(form : NgForm) {\n\n    const gInfo : GameInfo = {\n      gameName: \"name\",\n      gameType: form.value.gameType,\n      hostName: this.gameManager.playerName,\n      opponentPC: true\n    }\n\n    this.gameManager.againstPC(gInfo)\n  }\n\n}\n","<h4 mat-dialog-title>Against PC</h4>\n<form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\">\n\n    <mat-form-field>\n        <mat-label>Game Type</mat-label>\n        <mat-select required ngModel name=\"gameType\" apperance=\"fill\">\n            <mat-option value=\"TTT\">\n                Tic-Tac-Toe\n            </mat-option>\n            <mat-option value=\"CF\">\n                Connect 4\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <section>\n        <button mat-flat-button mat-dialog-close color=\"acccent\" type=\"button\">\n            Back\n        </button>\n        <button mat-flat-button [disabled]=\"f.invalid || f.pristine\" color=\"primary\">\n            Okay\n        </button>\n    </section>\n\n\n</form>","import { Component, Inject, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms'\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\n//services\nimport { GameManagerService } from \"../../shared/game-manager.service\";\n@Component({\n  selector: 'app-host-game',\n  templateUrl: './host-game.component.html',\n  styleUrls: ['./host-game.component.css']\n})\nexport class HostGameComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) private hostName : string, private router: Router, private gameManager: GameManagerService) { }\n\n  ngOnInit(): void {\n  }\n\n  onStart(form : NgForm) {\n\n    const gInfo : GameInfo = {\n      gameName: form.value.gameName,\n      gameType: form.value.gameType,\n      hostName: this.hostName,\n      host: true,\n      opponentPC: false\n    }\n    this.gameManager.hostGame(gInfo);\n\n  }\n\n}\n","\n<h4 mat-dialog-title>Host Game</h4>\n<form #f=\"ngForm\" (ngSubmit)=\"onStart(f)\">\n\n    <mat-form-field>\n        <input matNativeControl required ngModel name=\"gameName\" minlength=\"10\" placeholder=\"Game Name\" type=\"text\">\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Game Type</mat-label>\n        <mat-select required ngModel name=\"gameType\" apperance=\"fill\">\n            <mat-option value=\"TTT\">\n                Tic-Tac-Toe\n            </mat-option>\n            <mat-option value=\"CF\">\n                Connect 4\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <div>\n        <button mat-flat-button mat-dialog-close color=\"accent\" type=\"button\">Cancel</button>\n        <button mat-flat-button [disabled]=\"f.invalid || f.pristine\" color=\"primary\">Start</button>\n    </div>\n\n\n</form>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { GameManagerService } from 'src/app/shared/game-manager.service';\n@Component({\n  selector: 'app-join-game',\n  templateUrl: './join-game.component.html',\n  styleUrls: ['./join-game.component.css']\n})\nexport class JoinGameComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public gameInfo : GameInfo,\n    private gameManager: GameManagerService) { }\n\n  ngOnInit(): void {\n    console.log(this.gameInfo)\n  }\n\n\n  onJoin() {\n    this.gameManager.joinGame(this.gameInfo);\n  }\n}\n","<h4 mat-dialog-title> Join Game</h4>\n<form >\n\n    <section>\n        <p>{{gameInfo.hostName}}</p>\n        <p>{{gameInfo.gameType}}</p>\n        <p>{{gameInfo.gameName}}</p>\n    </section>\n\n\n    <div >\n        <button mat-flat-button mat-dialog-close color=\"accent\" type=\"button\" >Back</button>\n        <button mat-flat-button color=\"primary\" type=\"button\" (click)=\"onJoin()\" >Join</button>\n    </div>\n</form>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\n//components\nimport { HostGameComponent } from \"./host-game/host-game.component\";\nimport { JoinGameComponent } from \"./join-game/join-game.component\";\nimport { AgainstPcComponent } from \"./against-pc/against-pc.component\";\nimport { WaitingComponent } from \"./waiting/waiting.component\";\n//services\nimport { ManagerService } from \"../shared/manager.service\";\nimport { GameManagerService } from '../shared/game-manager.service';\n//rxjs\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-lobby',\n  templateUrl: './lobby.component.html',\n  styleUrls: ['./lobby.component.css']\n})\nexport class LobbyComponent implements OnInit, OnDestroy {\n\n  //subscriptions\n  gameInfoSubscription : Subscription;\n\n  \n  dataSource = new MatTableDataSource<GameInfo>();\n  displayedColumns = [\"gameName\" ,\"hostName\", \"gameType\"];\n  private dialogRef : MatDialogRef<HostGameComponent | JoinGameComponent | AgainstPcComponent | WaitingComponent>;\n\n  constructor(\n    private dialog : MatDialog, \n    private manager: ManagerService, \n    private gameManager: GameManagerService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.dataSource.data = [\n      {hostName: \"funkMaster100\", gameType: \"TicTacToe\", gameName: \"You cant beat\", opponentPC: false},\n      {hostName: \"connect4Mstr\", gameType: \"Connect4\", gameName: \"Casual\", opponentPC: false}\n    ];//dummy data\n\n    this.gameInfoSubscription = this.gameManager.gameInfoSubject.subscribe(gameInfo => {\n      //check close the dialog\n      if (this.dialogRef) {\n        this.dialogRef.close();\n        this.dialogRef = null;\n      }\n\n      if (gameInfo.opponentPC){\n        this.router.navigate(['/game']);\n      }\n\n      \n      if (gameInfo.host) {\n        this.dialogRef = this.dialog.open(WaitingComponent, {data :  \"Waiting for opponent.\"})\n\n        setTimeout(() => {\n          this.dialogRef.close()\n          this.dialogRef = null;\n          this.router.navigate(['/game'])\n        }, 4000);\n      } \n\n\n    })\n  }\n\n  ngOnDestroy() {\n    this.gameInfoSubscription.unsubscribe();\n  }\n\n  onHostGame() {\n    const hostName = this.gameManager.playerName;\n    this.dialogRef = this.dialog.open(HostGameComponent, {data : hostName});\n  }\n\n  onAgainstPC() {\n    this.dialogRef = this.dialog.open(AgainstPcComponent);\n  }\n\n  onClickRow(row : GameInfo) {\n    this.dialogRef = this.dialog.open(JoinGameComponent, {data: row});\n  }\n\n  getUserName() {\n    return this.gameManager.playerName;\n  }\n}\n","<main>\n    <h6 style=\"margin-left: 1rem\">Welcome {{getUserName()}} !</h6>\n\n    <section id=\"table\">\n        <mat-table [dataSource]=\"dataSource\">\n\n            <ng-container matColumnDef=\"gameName\">\n                <mat-header-cell *matHeaderCellDef>\n                    Game Name\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    {{element.gameName}}\n                </mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"gameType\">\n                <mat-header-cell *matHeaderCellDef>\n                    Game Type\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    {{element.gameType}}\n                </mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"hostName\">\n                <mat-header-cell *matHeaderCellDef>\n                    Player Name\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    {{element.hostName}}\n                </mat-cell>\n            </ng-container>\n\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"onClickRow(row)\">\n\n            </mat-row>\n        </mat-table>\n    </section>\n\n    <section id=\"form\">\n        <!-- form controls -->\n        <div>\n            <button mat-flat-button color=\"accent\" type=\"button\" routerLink=\"/\">Exit</button>\n            <button mat-flat-button color=\"secondary\" style=\"border: 1px grey inset;\" type=\"button\" (click)=\"onAgainstPC()\">Against PC</button>\n            <button mat-raised-button color=\"primary\" type=\"button\" (click)=\"onHostGame()\">Host Game</button>\n        </div>\n\n    </section>\n\n</main>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-waiting',\n  templateUrl: './waiting.component.html',\n  styleUrls: ['./waiting.component.css']\n})\nexport class WaitingComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public message : string ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  onBack() {\n    \n  }\n\n}\n","<h4 mat-dialog-title> Join Game</h4>\n<main >\n\n    <section>\n        <p>{{message}}</p>\n    </section>\n\n    <section id=\"spinner\">\n        <app-loading></app-loading>\n    </section>\n\n    <div >\n        <button mat-flat-button mat-dialog-close color=\"accent\" type=\"button\" (click)=\"onBack()\" >Back</button>\n    </div>\n</main>","import { NgModule } from '@angular/core';\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatSelectModule } from \"@angular/material/select\";\n\n@NgModule({\n  declarations: [],\n  imports: [\n    MatButtonModule,\n    MatInputModule,\n    MatTableModule,\n    MatDialogModule,\n    MatSelectModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatInputModule,\n    MatTableModule,\n    MatDialogModule,\n    MatSelectModule\n  ]\n})\nexport class MaterialModule { }\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { LobbyComponent } from './lobby/lobby.component';\nimport { TitleScreenComponent } from \"./title-screen/title-screen.component\";\nimport { GameComponent } from \"./game/game.component\";\n\nconst routes : Routes = [\n    {path: \"\", redirectTo: \"title\", pathMatch: 'full'},\n    {path: \"title\", component: TitleScreenComponent},\n    {path: \"lobby\", component: LobbyComponent},\n    {path: \"game\", component: GameComponent}\n\n];\n\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class RoutingModule {\n\n}","import { Subject } from \"rxjs\";\n\nexport abstract class Board {\n\n    constructor(canvas : HTMLCanvasElement, numberOfRows: number, numberOfCols: number) {\n        this.canvas = canvas;\n        this.context = canvas.getContext('2d');\n        this.lengthOfCol = numberOfRows;\n        this.lengthOfRow = numberOfCols;\n        this.boardArray = new Array(numberOfRows);\n        for (let i = 0; i < numberOfRows; i++){\n            this.boardArray[i] = new Array<string>(this.lengthOfRow)\n        }\n        this.setCanvasDimensions(this.canvas.width,this.canvas.height);\n    }\n\n    public boardArray : Array<string[]> //stroes the pieces\n\n    public canvas : HTMLCanvasElement;\n    public context : CanvasRenderingContext2D;\n    public canvasSubject = new Subject<HTMLCanvasElement>();\n    public lengthOfCol : number; //number of spots in a row or column\n    public lengthOfRow : number;\n\n    abstract async checkForWinner();\n    abstract clickBoard(x:number,y:number):BoardPiece;\n    abstract checkValidSpot(r:number,c:number):BoardPiece;\n    abstract drawBoard();\n    abstract drawPieces();\n\n    placePiece(boardPiece: BoardPiece, playerPiece:string) {\n        this.boardArray[boardPiece.index[0]][boardPiece.index[1]] =playerPiece;\n    }\n    \n    drawBoardAndPieces() {\n        this.drawBoard();\n        this.drawPieces();\n        this.canvasSubject.next(this.canvas);\n    }\n\n    checkForWinnerPromise() {\n        return new Promise((resolve, reject) => {\n            const result = this.checkForWinner();\n            if (result) {\n                resolve(result)\n            } else {\n                reject(result)\n            }\n        })\n    }\n\n    resetBoard() {\n        this.boardArray=[];\n        this.drawBoard();\n    }\n    \n    setCanvasDimensions(width=this.canvas.width, height=this.canvas.height) {\n        this.canvas.width = width;\n        this.canvas.height = height;\n    }\n}\n\nexport class TicTacToeBoard extends Board{\n    \n    constructor(canvas : HTMLCanvasElement) {\n        super(canvas, 3, 3);\n        this.boardArray[0][0]=\"x\";\n        this.drawBoardAndPieces();\n        console.log(this.boardArray);\n    }\n\n    checkForWinner() {\n\n        //check diagonals\n        let checkDiag1 = (this.boardArray[0] === this.boardArray[4]) && (this.boardArray[0] === this.boardArray[7])\n        let checkDiag2 = (this.boardArray[2] === this.boardArray[4]) && (this.boardArray[2] === this.boardArray[6])\n\n        if (checkDiag1 || checkDiag2) {\n            return checkDiag1 ? { win: this.boardArray[0], coord: [0, 4, 7] } : { win: this.boardArray[2], coord: [2, 4, 6] };\n        }\n\n        let i = 0;\n        //check rows and cols\n        while (i <= 2) {\n            let checkRow = (this.boardArray[(i + 2 * i)] === this.boardArray[(i + 2 * i) + 1]) && (this.boardArray[(i + 2 * i)] === this.boardArray[(i + 2 * i) + 2]);\n\n            if (checkRow) {\n                return { win: this.boardArray[i + 2 * i], coord: [i + 2 * i, i + 2 * i + 1, i + 2 * i + 2] }\n            }\n\n            let checkCol = (this.boardArray[i] === this.boardArray[i + 3]) && (this.boardArray[i] === this.boardArray[i + 6]);\n            if (checkCol) {\n                return { win: this.boardArray[i], coord: [i, i + 3, i + 6] }\n            }\n            i++;\n        }\n\n        return false;\n    }\n\n    drawBoard() {\n\n        console.log(this.canvas.width, this.canvas.height)\n        //draw columns\n        let i = this.canvas.width/this.lengthOfRow\n        while (i < this.canvas.width) {\n            this.context.beginPath() \n            this.context.moveTo(i,0);\n            this.context.lineTo(i,this.canvas.height);\n            i+=this.canvas.width/this.lengthOfRow;\n            this.context.stroke()\n        }\n\n        i = this.canvas.height/this.lengthOfCol\n\n        //draw rows\n        while (i < this.canvas.height) {\n            this.context.beginPath() \n            this.context.moveTo(0,i);\n            this.context.lineTo(this.canvas.width,i);\n            i+=this.canvas.height/this.lengthOfCol;\n            this.context.stroke()\n        }       \n\n\n    }\n\n    drawPieces() {\n\n        let i = 0;\n        let j = 0;\n        let widthOfOneSpot = this.canvas.width/this.lengthOfCol;\n        let heightOfOneSpot = this.canvas.height/this.lengthOfRow;\n        this.context.lineWidth = 5;\n        while (i*j < this.lengthOfCol*this.lengthOfRow ) {\n            \n            let piece = this.boardArray[i][j];\n            this.context.beginPath()\n            if (piece === \"x\") {\n\n                this.context.moveTo(widthOfOneSpot*(j+0.5),heightOfOneSpot*(i+0.5));\n                this.context.lineTo(widthOfOneSpot*(j+0.25),heightOfOneSpot*(i+0.25));\n                this.context.moveTo(widthOfOneSpot*(j+0.5),heightOfOneSpot*(i+0.5));\n                this.context.lineTo(widthOfOneSpot*(j+0.75),heightOfOneSpot*(i+0.25));\n                this.context.moveTo(widthOfOneSpot*(j+0.5),heightOfOneSpot*(i+0.5));\n                this.context.lineTo(widthOfOneSpot*(j+0.25),heightOfOneSpot*(i+0.75));\n                this.context.moveTo(widthOfOneSpot*(j+0.5),heightOfOneSpot*(i+0.5));\n                this.context.lineTo(widthOfOneSpot*(j+0.75),heightOfOneSpot*(i+0.75));\n\n            } else if (piece === \"o\") {\n                this.context.ellipse(\n                    widthOfOneSpot*(j+0.5),\n                    heightOfOneSpot*(i+0.5),\n                    widthOfOneSpot*0.25,\n                    heightOfOneSpot*0.25,0,0,Math.PI*2);\n            }\n            this.context.stroke();\n            j++;\n\n            if (j > this.lengthOfCol) {\n                j = 0;\n                i++;\n            }\n    \n\n            if (i > this.lengthOfRow) {\n                break;\n            }\n            \n        }\n        this.context.lineWidth = 1;\n\n\n\n    }\n\n    checkValidSpot( r:number, c:number) : BoardPiece {\n        console.log(r,c)\n        return {\n            isValid: !this.boardArray[r][c],\n            index: [r,c]\n        };\n    }\n\n\n\n    clickBoard(x:number, y:number) : BoardPiece{\n\n        \n        let i = 0;\n        let j = 0;\n        let widthOfOneSpot = this.canvas.width/this.lengthOfCol;\n        let heightOfOneSpot = this.canvas.height/this.lengthOfRow;\n        \n\n        //check if click is in cell boundaries\n        while (i < this.lengthOfCol && j < this.lengthOfRow) {\n            let checkCol = x > widthOfOneSpot*j && x < widthOfOneSpot*(j+1);\n            let checkRow = y > heightOfOneSpot*i && y < heightOfOneSpot*(i+1);\n\n            if (checkRow && checkCol) {\n                break;\n            }\n\n            j++;\n\n            if (j === this.lengthOfCol) {\n                j = 0;\n                i++;\n            }\n\n            if (i == this.lengthOfRow) {\n                break;\n            }\n\n\n        }\n        let valid = this.checkValidSpot(i,j);\n        return valid;\n    }\n\n\n}\n\nexport class ConnectFourBoard extends Board{\n\n    constructor(canvas : HTMLCanvasElement) {\n        super(canvas, 7, 6);\n    }\n\n    checkForWinner() {\n\n    }\n    \n    checkValidSpot(r:number,c:number){\n        return {isValid:false,index:[]}\n    }\n\n    drawBoard() {\n        \n    }\n\n    drawPieces() {\n\n    }\n    \n    clickBoard(x:number,y:number) {\n        return {isValid:false,index:[]}\n    }\n}","import { Injectable } from '@angular/core';\nimport { Subject } from \"rxjs\";\nimport { TicTacToeBoard, ConnectFourBoard } from \"./boards\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameManagerService {\n\n  gameInfoSubject = new Subject<GameInfo>();\n  board : TicTacToeBoard | ConnectFourBoard = null;\n  private gameInfo : GameInfo;\n  playerName : string ;\n  turn : string;\n\n  constructor() { }\n\n  hostGame(gameInfo : GameInfo) {\n    this.setGameInfo(gameInfo)\n  }\n\n  againstPC(gameInfo : GameInfo){\n    this.setGameInfo(gameInfo)\n  }\n\n  joinGame(gameInfo : GameInfo) {\n    this.setGameInfo(gameInfo)\n  }\n\n  quitGame() {\n    this.clearGameInfo();\n  }\n\n  startGame(canvas : HTMLCanvasElement) {\n\n    this.turn = Math.floor(Math.random()*2)  === 1 ? \"x\" : \"o\";\n\n    //set the board\n    if (this.gameInfo.gameType === \"TTT\") {\n      this.board = new TicTacToeBoard(canvas);\n    } else if (this.gameInfo.gameType === \"CF\") {\n      this.board = new ConnectFourBoard(canvas);\n    }\n\n  }\n\n  setGameInfo(gameInfo : GameInfo) {\n    this.gameInfo = gameInfo;\n    this.gameInfoSubject.next(gameInfo);\n  }\n\n  getGameInfo() {\n    return this.gameInfo;\n  }\n\n  clearGameInfo() {\n    this.gameInfo = null;\n    this.gameInfoSubject.next(this.gameInfo);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.css']\n})\nexport class LoadingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"loadingio-spinner-blocks-3112n02kcmk\">\n    <div class=\"ldio-3flzva71sn7\">\n        <div style='left:38px;top:38px;animation-delay:0s'></div>\n        <div style='left:80px;top:38px;animation-delay:0.125s'></div>\n        <div style='left:122px;top:38px;animation-delay:0.25s'></div>\n        <div style='left:38px;top:80px;animation-delay:0.875s'></div>\n        <div style='left:122px;top:80px;animation-delay:0.375s'></div>\n        <div style='left:38px;top:122px;animation-delay:0.75s'></div>\n        <div style='left:80px;top:122px;animation-delay:0.625s'></div>\n        <div style='left:122px;top:122px;animation-delay:0.5s'></div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ManagerService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from \"@angular/forms\";\nimport { Router } from '@angular/router';\nimport { GameManagerService } from '../shared/game-manager.service';\n\n@Component({\n  selector: 'app-title-screen',\n  templateUrl: './title-screen.component.html',\n  styleUrls: ['./title-screen.component.css']\n})\nexport class TitleScreenComponent implements OnInit {\n\n  constructor(private router: Router, private gameManager: GameManagerService) { }\n\n  ngOnInit(): void {\n  }\n\n  onOkay(form : NgForm) {\n    this.gameManager.playerName = form.value.username;\n    this.router.navigate(['/lobby'])\n  }\n\n}\n","<main>\n    <section id=\"title\">\n        <h1>Tic Tac Toe & Connect 4</h1>\n    </section>\n    <section id=\"form\">\n        <form #f=\"ngForm\" (ngSubmit)=\"onOkay(f)\" >\n            <mat-form-field>\n                <input matNativeControl ngModel name=\"username\" required placeholder=\"Enter Username\">\n            </mat-form-field>\n            <mat-error></mat-error>\n            <button mat-raised-button [disabled]=\"f.invalid || f.pristine\" color=\"primary\">Okay</button>\n        </form>\n    </section>\n</main>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import \"hammerjs\";\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport { RequiredValidator } from '@angular/forms';\n\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n\n"],"sourceRoot":"webpack:///"}